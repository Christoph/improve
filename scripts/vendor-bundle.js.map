{"version":3,"sources":["/node_modules/parcoord-es/src/RenderQueue.js","/node_modules/parcoord-es/src/helper/extend.js","/node_modules/parcoord-es/src/helper/without.js","/node_modules/parcoord-es/src/helper/rebind.js","/node_modules/parcoord-es/src/helper/functor.js","/node_modules/parcoord-es/src/index.js"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","extend","target","source","key","without","arr","items","forEach","el","d3_rebind","method","apply","_rebind","_functor","v","ParCoords","config","__","top","right","bottom","left","dimensionTitles","warn","d","dimensions","title","pc","selection","select","width","node","clientWidth","height","clientHeight","layer","append","attr","canvas","getContext","svg","style","margin","eventTypes","keys","events","dispatch","on","detectDimensions","autoscale","mode","resize","flags","brushable","brushReset","g","createAxes","reorderable","w","h","xscale","scaleBand","dragging","_line","line","axis","axisLeft","ticks","clusterCentroids","side_effects","composite","foreground","globalCompositeOperation","brushed","alpha","x","globalAlpha","brushedColor","strokeStyle","applyDimensionDefaults","domain","getOrderedDimensionKeys","sortDimensions","interactive","updateAxes","bundleDimension","hideAxis","compute_cluster_centroids","flipAxes","state","getset","obj","Object","prototype","toString","call","old","getRange","nullValueSeparator","nullValueSeparatorPadding","defaultScales","k","_extent","extent","getTime","scaleOrdinal","rangePoints","includes","tempDate","val","unshift","scaleTime","range","temp","scaleLinear","counts","p","undefined","getOwnPropertyNames","sort","tempArr","i","push","pop","categoricalRange","addBy","j","yscale","type","devicePixelRatio","window","selectAll","color","lineWidth","scale","highlight","flip","indexOf","reverse","commonScale","global","t","scales","filter","reduce","a","b","dims","types","detectDimensionTypes","newDims","currIndex","orient","innerTickSize","outerTickSize","tickPadding","index","y","ascending","toType","match","toLowerCase","toTypeCoerceNumbers","parseFloat","col","isNaN","Number","parseInt","renderBrushed","isBrushed","object","brush","currentMode","brushState","hasOwnProperty","default","path_foreground","foregroundQueue","queue","path_brushed","brushedQueue","clusterCounts","row","scaled","has","set","count","get","_map","is_brushed","compute_centroids","centroids","cols","position","$V","cx","cy","leftCentroid","rightCentroid","centroid","bundlingStrength","compute_real_centroids","realCentroids","compute_control_points","smoothness","cps","e","mid","diff","subtract","shadows","alphaOnBrushed","axisDots","_r","r","ctx","marks","startAngle","endAngle","Math","PI","min","pow","beginPath","arc","stroke","fill","single_curve","moveTo","showControlPoints","fillRect","bezierCurveTo","color_path","getNullPosition","log","single_path","lineTo","path_highlight","clearRect","fillStyle","flipAxisAndUpdatePCP","dimension","parentElement","transition","duration","animationTime","rotateLabels","delta","event","deltaY","dimensionTitleRotation","preventDefault","dimensionLabels","removeAxes","enter","each","axisElement","applyAxisConfig","text","axes","remove","g_data","exit","brushMode","axisCfg","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","brushY","sourceEvent","ctrlKey","html","nodes","outerHTML","replace","brushes","dat","__data__","brushSelection","parentNode","move","selected","brushesToKeep","actives","extents","ranges","values","ranger","invert","ii","dimRange","dimDomain","within","category","categoryIndex","categoryRangeValue","every","multiBrushData","idx","filtered","z","drag","__origin__","max","dx","reorder","rowdata","firstDim","sortDimensionsByRowData","reordered","highlighted","unhighlight","copy","positionSortedKeys","pixelDifference","localeCompare","adjacent_pairs","ret","modes","brushUpdated","newSelection","brushPredicate","predicate","String","toUpperCase","Error","brushModes","uninstall","install","install1DAxes","brushNodes","_brushRange","_projected","some","brushExtents","brushSelections","brushFor","_selector","_brush","stopPropagation","install2DStrums","strums","strumRect","drawStrum","strum","activePoint","_svg","id","points","p1","p2","circles","_drag","ev","minX","maxX","minY","maxY","onDragEnd","dimensionsForPoint","dim","next","onDragStart","mouse","active","onDrag","containmentTest","m1","b1","m2","b2","y1","y2","ids","crossesStrum","test","d1","d2","point","removeStrum","consecutive","first","second","insert","installAngularBrush","arcs","p3","_path","angle","d3Arc","innerRadius","hypothenuse","sqrt","rad","c","deg","signedAngle","tmp","asin","outerRadius","sAngle","uAngle","word","classed","intersection","mergeParcoords","callback","mergedCanvas","document","createElement","context","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","version"],"mappings":"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","file":"vendor-bundle.js","sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = (function(func) {\n    let _queue = [],                  // data to be rendered\n        _rate = 1000,                 // number of calls per frame\n        _invalidate = function() {},  // invalidate last render queue\n        _clear = function() {};       // clearing function\n\n    let rq = function(data) {\n        if (data) rq.data(data);\n        _invalidate();\n        _clear();\n        rq.render();\n    };\n\n    rq.render = function() {\n        let valid = true;\n        _invalidate = rq.invalidate = function() {\n            valid = false;\n        };\n\n        function doFrame() {\n            if (!valid) return true;\n            let chunk = _queue.splice(0,_rate);\n            chunk.map(func);\n            requestAnimationFrame(doFrame);\n        }\n\n        doFrame();\n    };\n\n    rq.data = function(data) {\n        _invalidate();\n        _queue = data.slice(0);   // creates a copy of the data\n        return rq;\n    };\n\n    rq.add = function(data) {\n        _queue = _queue.concat(data);\n    };\n\n    rq.rate = function(value) {\n        if (!arguments.length) return _rate;\n        _rate = value;\n        return rq;\n    };\n\n    rq.remaining = function() {\n        return _queue.length;\n    };\n\n    // clear the canvas\n    rq.clear = function(func) {\n        if (!arguments.length) {\n            _clear();\n            return rq;\n        }\n        _clear = func;\n        return rq;\n    };\n\n    rq.invalidate = _invalidate;\n\n    return rq;\n});\n\nexport default renderQueue;","const extend = (target, source)=> {\n    for (let key in source) {\n        target[key] = source[key];\n    }\n    return target;\n};\n\nexport default extend;","const without = (arr, items)=> {\n    items.forEach( (el)=> {\n        delete arr[el];\n    });\n    return arr;\n};\n\nexport default without;","const d3_rebind = (target, source, method)=> {\n    return function() {\n        let value = method.apply(source, arguments);\n        return value === source ? target : value;\n    };\n}\n\nconst _rebind =  (target, source, method)=> {\n    target[method] = d3_rebind(target, source, source[method]);\n    return target;\n}\n\nexport default _rebind;","const _functor =(v)=> {\n    return typeof v === \"function\" ? v : function() { return v; };\n}\n\nexport default _functor;","import { select, selectAll, event, mouse } from 'd3-selection';\nimport { keys, entries, map } from 'd3-collection';\nimport { dispatch } from 'd3-dispatch';\nimport { extent, ascending, min } from 'd3-array';\nimport { scaleBand, scaleOrdinal, scaleTime, scaleLinear } from 'd3-scale';\nimport { line, arc as d3Arc } from 'd3-shape';\nimport { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\nimport { brushSelection, brushY } from 'd3-brush';\nimport { drag } from 'd3-drag';\n\nimport './parallel-coordinates.css';\nimport renderQueue from './RenderQueue';\n\nimport {\n    _functor,\n    _rebind,\n    extend,\n    without\n} from './helper';\n\n\n//============================================================================================\n\nconst ParCoords = (config)=> {\n    let __ = {\n        data: [],\n        highlighted: [],\n        dimensions: {},\n        dimensionTitleRotation: 0,\n        brushes: [],\n        brushed: false,\n        brushedColor: null,\n        alphaOnBrushed: 0.0,\n        mode: \"default\",\n        rate: 20,\n        width: 600,\n        height: 300,\n        margin: { top: 24, right: 0, bottom: 12, left: 0 },\n        nullValueSeparator: \"undefined\", // set to \"top\" or \"bottom\"\n        nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n        color: \"#069\",\n        composite: \"source-over\",\n        alpha: 0.7,\n        bundlingStrength: 0.5,\n        bundleDimension: null,\n        smoothness: 0.0,\n        showControlPoints: false,\n        hideAxis : [],\n        flipAxes: [],\n        animationTime: 1100, // How long it takes to flip the axis when you double click\n        rotateLabels: false\n    };\n\n    extend(__, config);\n\n    if (config && config.dimensionTitles) {\n        console.warn(\"dimensionTitles passed in config is deprecated. Add title to dimension object.\");\n        entries(config.dimensionTitles).forEach(function(d) {\n            if (__.dimensions[d.key]) {\n                __.dimensions[d.key].title = __.dimensions[d.key].title ? __.dimensions[d.key].title : d.value;\n            } else {\n                __.dimensions[d.key] = {\n                    title: d.value\n                };\n            }\n        });\n    }\n    let pc = function(selection) {\n        selection = pc.selection = select(selection);\n\n        __.width = selection.node().clientWidth;\n        __.height = selection.node().clientHeight;\n        // canvas data layers\n        [\"marks\", \"foreground\", \"brushed\", \"highlight\"].forEach(function(layer) {\n            canvas[layer] = selection\n                .append(\"canvas\")\n                .attr(\"class\", layer).node();\n            ctx[layer] = canvas[layer].getContext(\"2d\");\n        });\n\n\n        // svg tick and brush layers\n        pc.svg = selection\n            .append(\"svg\")\n            .attr(\"width\", __.width )\n            .attr(\"height\", __.height)\n            .style(\"font\", \"14px sans-serif\")\n            .style(\"position\", \"absolute\")\n\n            .append(\"svg:g\")\n            .attr(\"transform\", \"translate(\" + __.margin.left + \",\" + __.margin.top + \")\");\n\n        return pc;\n    };\n    let eventTypes = [\"highlight\", \"brush\", \"end\", \"start\", \"axesreorder\"].concat(keys(__));\n\n    let events = dispatch(...eventTypes);\n\n    let render = dispatch(\"render\");\n    render.on(\"render\", function () {\n        if (!keys(__.dimensions).length) {\n            pc.detectDimensions()\n        }\n        pc.autoscale();\n\n        pc.render[__.mode]();\n    });\n\n    let resize = dispatch(\"resize\");\n    resize.on(\"resize\", function () {\n        // selection size\n        pc.selection.select(\"svg\")\n            .attr(\"width\", __.width)\n            .attr(\"height\", __.height)\n        pc.svg.attr(\"transform\", \"translate(\" + __.margin.left + \",\" + __.margin.top + \")\");\n\n        // FIXME: the current brush state should pass through\n        if (flags.brushable) pc.brushReset();\n        // scales\n        pc.autoscale();\n        // axes, destroys old brushes.\n        if (g) pc.createAxes();\n        if (flags.brushable) pc.brushable();\n        if (flags.reorderable) pc.reorderable();\n    });\n\n    let w = function() { return __.width - __.margin.right - __.margin.left; },\n        h = function() { return __.height - __.margin.top - __.margin.bottom; },\n        flags = {\n            brushable: false,\n            reorderable: false,\n            axes: false,\n            interactive: false,\n            debug: false\n        },\n        xscale = scaleBand(),\n        dragging = {},\n        _line = line(),\n        axis = axisLeft().ticks(5),\n        g, // groups for axes, brushes\n        ctx = {},\n        canvas = {},\n        clusterCentroids = [];\n// side effects for setters\n    let side_effects = dispatch(...keys(__));\n    let composite = dispatch(\"composite\");\n    composite.on(\"composite\", function(d) {\n        ctx.foreground.globalCompositeOperation = d.value;\n        ctx.brushed.globalCompositeOperation = d.value;\n    });\n    let alpha = dispatch(\"alpha\");\n    alpha.on(\"alpha\", function(x, value) {\n        ctx.foreground.globalAlpha = x;\n        ctx.brushed.globalAlpha = x;\n    });\n    let brushedColor = dispatch(\"brushedColor\");\n    brushedColor.on(\"brushedColor\", function (d) {\n        ctx.brushed.strokeStyle = d.value;\n    });\n    let width = dispatch(\"width\");\n    width.on(\"width\", function(d) {\n        pc.resize();\n    })\n    let height = dispatch(\"height\");\n    height.on(\"height\", function(d) {\n        pc.resize();\n    })\n    let margin = dispatch(\"margin\");\n    margin.on(\"margin\", function(d) {\n        pc.resize();\n    })\n    let rate = dispatch(\"rate\");\n    rate.on(\"rate\", function(d) {\n        brushedQueue.rate(d.value);\n        foregroundQueue.rate(d.value);\n    })\n    let dimensions = dispatch(\"dimensions\")\n    dimensions.on(\"dimensions\", function(d) {\n        __.dimensions = pc.applyDimensionDefaults(keys(d.value));\n        xscale.domain(pc.getOrderedDimensionKeys());\n        pc.sortDimensions();\n        if (flags.interactive){pc.render().updateAxes();}\n    });\n    let bundleDimension = dispatch(\"bundleDimension\");\n    bundleDimension.on(\"bundleDimension\", function(d) {\n        if (!keys(__.dimensions).length) pc.detectDimensions();\n        pc.autoscale();\n        if (typeof d.value === \"number\") {\n            if (d.value < keys(__.dimensions).length) {\n                __.bundleDimension = __.dimensions[d.value];\n            } else if (d.value < __.hideAxis.length) {\n                __.bundleDimension = __.hideAxis[d.value];\n            }\n        } else {\n            __.bundleDimension = d.value;\n        }\n\n        __.clusterCentroids = compute_cluster_centroids(__.bundleDimension);\n        if (flags.interactive){pc.render();}\n    });\n    let hideAxis = dispatch(\"hideAxis\");\n    hideAxis.on(\"hideAxis\", function(d) {\n        pc.dimensions(pc.applyDimensionDefaults());\n        pc.dimensions(without(__.dimensions, d.value));\n    });\n    let flipAxes = dispatch(\"flipAxes\");\n    flipAxes.on(\"flipAxes\", function(d) {\n        if (d.value && d.value.length) {\n            d.value.forEach(function(axis) {\n                flipAxisAndUpdatePCP(axis);\n            });\n            pc.updateAxes(0);\n        }\n    });\n\n    // expose the state of the chart\n    pc.state = __;\n    pc.flags = flags;\n\n    // create getter/setters\n    getset(pc, __, events);\n\n    // expose events\n    _rebind(pc, events, \"on\");\n    // getter/setter with event firing\n    function getset(obj,state,events)  {\n        keys(state).forEach(function(key) {\n            obj[key] = function(x) {\n                if (!arguments.length) {\n                    return state[key];\n                }\n                if (key === 'dimensions' && Object.prototype.toString.call(x) === '[object Array]') {\n                    console.warn(\"pc.dimensions([]) is deprecated, use pc.dimensions({})\");\n                    x = pc.applyDimensionDefaults(x);\n                }\n                let old = state[key];\n                state[key] = x;\n                // events._.call(key, pc, x, old);\n                //handle events dispatches\n\n                if (key === \"render\") {\n                    render.call(\"render\", pc, {\"value\": x, \"previous\": old});\n                } else if (key === \"resize\") {\n                    resize.call(\"resize\", pc, {\"value\": x, \"previous\": old});\n                }\n                //handle side effects dispatches\n                if (key === \"width\") {\n                    width.call(\"width\", pc)\n                } else if (key === \"height\") {\n                    height.call(\"height\", pc);\n                } else if (key === \"margin\") {\n                    margin.call(\"margin\", pc);\n                } else if (key === \"dimensions\") {\n                    dimensions.call(\"dimensions\", pc, {\"value\": x, \"previous\": old});\n                } else if (key === \"bundleDimension\") {\n                    bundleDimension.call(\"bundleDimension\", pc, {\"value\": x, \"previous\": old});\n                } else if (key === \"composite\") {\n                    composite.call(\"composite\", pc, {\"value\": x, \"previous\": old});\n                } else if (key === \"alpha\") {\n                    alpha.call(\"alpha\", pc, {\"value\": x, \"previous\": old});\n                } else if (key === \"brushedColor\") {\n                    brushedColor.call(\"brushedColor\", pc, {\"value\": x, \"previous\": old});\n                } else if (key === \"flipAxes\") {\n                    flipAxes.call(\"flipAxes\", pc, {\"value\": x, \"previous\": old});\n                } else if (key === \"hideAxis\") {\n                    hideAxis.call(\"hideAxis\", pc, {\"value\": x, \"previous\": old});\n                }\n                return obj;\n            };\n        });\n    };\n\n\n    /** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\n    function getRange() {\n        if (__.nullValueSeparator==\"bottom\") {\n            return [h()+1-__.nullValueSeparatorPadding.bottom-__.nullValueSeparatorPadding.top, 1];\n        } else if (__.nullValueSeparator==\"top\") {\n            return [h()+1, 1+__.nullValueSeparatorPadding.bottom+__.nullValueSeparatorPadding.top];\n        }\n        return [h()+1, 1];\n    };\n\n    pc.autoscale = function() {\n        // yscale\n        let defaultScales = {\n            \"date\": function(k) {\n                let _extent = extent(__.data, function(d) {\n                    return d[k] ? d[k].getTime() : null;\n                });\n                // special case if single value\n                if (_extent[0] === _extent[1]) {\n                    return scaleOrdinal()\n                        .domain([_extent[0]])\n                        .rangePoints(getRange());\n                }\n                if (__.flipAxes.includes(k)) {\n                    let tempDate = [];\n                    _extent.forEach(function (val) {\n                        tempDate.unshift(val);\n                    });\n                    _extent = tempDate;\n                }\n                return scaleTime()\n                    .domain(_extent)\n                    .range(getRange());\n            },\n            \"number\": function(k) {\n                let _extent = extent(__.data, function(d) { return +d[k]; });\n                // special case if single value\n                if (_extent[0] === _extent[1]) {\n                    return scaleOrdinal()\n                        .domain([_extent[0]])\n                        .range(getRange());\n                }\n                if (__.flipAxes.includes(k)) {\n                    let temp = [];\n                    _extent.forEach(function (val) {\n                        temp.unshift(val);\n                    });\n                    _extent = temp;\n                }\n                return scaleLinear()\n                    .domain(_extent)\n                    .range(getRange());\n            },\n            \"string\": function(k) {\n                let counts = {},\n                    domain = [];\n                // Let's get the count for each value so that we can sort the domain based\n                // on the number of items for each value.\n                __.data.map(function(p) {\n                    if (p[k] === undefined && __.nullValueSeparator!== \"undefined\"){\n                        return; // null values will be drawn beyond the horizontal null value separator!\n                    }\n                    if (counts[p[k]] === undefined) {\n                        counts[p[k]] = 1;\n                    } else {\n                        counts[p[k]] = counts[p[k]] + 1;\n                    }\n                });\n                if (__.flipAxes.includes(k)) {\n                    domain = Object.getOwnPropertyNames(counts).sort();\n                } else {\n                    let tempArr = Object.getOwnPropertyNames(counts).sort();\n                    for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n                        domain.push(tempArr.pop());\n                    }\n                }\n\n                //need to create an ordinal scale for categorical data\n                let categoricalRange = [];\n                if (domain.length === 1) { //edge case\n                    domain = [\" \", domain[0], \" \"];\n                }\n                let addBy = getRange()[0] / (domain.length - 1);\n                for (let j = 0; j < domain.length; j++) {\n                    if (categoricalRange.length === 0) {\n                        categoricalRange.push(0);\n                        continue;\n                    }\n                    categoricalRange.push(categoricalRange[j - 1] + addBy)\n                }\n                return scaleOrdinal()\n                    .domain(domain)\n                    .range(categoricalRange);\n            }\n        };\n        keys(__.dimensions).forEach(function(k) {\n            __.dimensions[k].yscale = defaultScales[__.dimensions[k].type](k);\n        });\n\n        // xscale\n        xscale.range([0, w()], 1);\n        // Retina display, etc.\n        let devicePixelRatio = window.devicePixelRatio || 1;\n\n        // canvas sizes\n        pc.selection.selectAll(\"canvas\")\n            .style(\"margin-top\", __.margin.top + \"px\")\n            .style(\"margin-left\", __.margin.left + \"px\")\n            .style(\"width\", (w()+2) + \"px\")\n            .style(\"height\", (h()+2) + \"px\")\n            .attr(\"width\", (w()+2) * devicePixelRatio)\n            .attr(\"height\", (h()+2) * devicePixelRatio);\n        // default styles, needs to be set when canvas width changes\n        ctx.foreground.strokeStyle = __.color;\n        ctx.foreground.lineWidth = 1.4;\n        ctx.foreground.globalCompositeOperation = __.composite;\n        ctx.foreground.globalAlpha = __.alpha;\n        ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n        ctx.brushed.strokeStyle = __.brushedColor;\n        ctx.brushed.lineWidth = 1.4;\n        ctx.brushed.globalCompositeOperation = __.composite;\n        ctx.brushed.globalAlpha = __.alpha;\n        ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n        ctx.highlight.lineWidth = 3;\n        ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n        return this;\n    };\n\n    pc.scale = function(d, domain) {\n        __.dimensions[d].yscale.domain(domain);\n\n        return this;\n    };\n\n    pc.flip = function(d) {\n        if (__.flipAxes.includes(d)) {\n            __.flipAxes.splice(__.flipAxes.indexOf(d), 1);\n        } else {\n            __.flipAxes.push(d);\n        }\n        __.dimensions[d].yscale.domain(__.dimensions[d].yscale.domain().reverse()); // works\n        return this;\n    };\n\n    pc.commonScale = function(global, type) {\n        let t = type || \"number\";\n        if (typeof global === 'undefined') {\n            global = true;\n        }\n\n        // try to autodetect dimensions and create scales\n        if (!keys(__.dimensions).length) {\n            pc.detectDimensions()\n        }\n        pc.autoscale();\n\n        // scales of the same type\n        let scales = keys(__.dimensions).filter(function(p) {\n            return __.dimensions[p].type == t;\n        });\n\n        if (global) {\n            let _extent = extent(scales.map(function(d,i) {\n                return __.dimensions[d].yscale.domain();\n            }).reduce(function(a,b) {\n                return a.concat(b);\n            }));\n\n            scales.forEach(function(d) {\n                __.dimensions[d].yscale.domain(_extent);\n            });\n\n        } else {\n            scales.forEach(function(d) {\n                __.dimensions[d].yscale.domain(extent(__.data, function(d) { return +d[k]; }));\n            });\n        }\n\n        // update centroids\n        if (__.bundleDimension !== null) {\n            pc.bundleDimension(__.bundleDimension);\n        }\n\n        return this;\n    };\n    pc.detectDimensions = function() {\n        pc.dimensions(pc.applyDimensionDefaults());\n        return this;\n    };\n\n    pc.applyDimensionDefaults = function(dims) {\n        let types = pc.detectDimensionTypes(__.data);\n        dims = dims ? dims : keys(types);\n        let newDims = {};\n        let currIndex = 0;\n        dims.forEach(function(k) {\n            newDims[k] = __.dimensions[k] ? __.dimensions[k] : {};\n            //Set up defaults\n            newDims[k].orient= newDims[k].orient ? newDims[k].orient : 'left';\n            newDims[k].ticks= newDims[k].ticks != null ? newDims[k].ticks : 5;\n            newDims[k].innerTickSize= newDims[k].innerTickSize != null ? newDims[k].innerTickSize : 6;\n            newDims[k].outerTickSize= newDims[k].outerTickSize != null ? newDims[k].outerTickSize : 0;\n            newDims[k].tickPadding= newDims[k].tickPadding != null ? newDims[k].tickPadding : 3;\n            newDims[k].type= newDims[k].type ? newDims[k].type : types[k];\n\n            newDims[k].index = newDims[k].index != null ? newDims[k].index : currIndex;\n            currIndex++;\n        });\n        return newDims;\n    };\n\n    pc.getOrderedDimensionKeys = function(){\n        return keys(__.dimensions).sort(function(x, y){\n            return ascending(__.dimensions[x].index, __.dimensions[y].index);\n        });\n    };\n\n// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\n    pc.toType = function(v) {\n        return ({}).toString.call(v).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n    };\n\n// try to coerce to number before returning type\n    pc.toTypeCoerceNumbers = function(v) {\n        if ((parseFloat(v) == v) && (v != null)) {\n            return \"number\";\n        }\n        return pc.toType(v);\n    };\n\n// attempt to determine types of each dimension based on first row of data\n    pc.detectDimensionTypes = function(data) {\n        let types = {};\n        keys(data[0])\n            .forEach(function(col) {\n                types[isNaN(Number(col)) ? col : parseInt(col)] = pc.toTypeCoerceNumbers(data[0][col]);\n            });\n        return types;\n    };\n\n    pc.render = function() {\n        render.call(\"render\", this);\n        return this;\n    };\n\n    pc.renderBrushed = function() {\n        if (!keys(__.dimensions).length) pc.detectDimensions();\n\n        pc.renderBrushed[__.mode]();\n        render.call(\"render\", this);\n        return this;\n    };\n\n    function isBrushed() {\n        if (__.brushed && __.brushed.length !== __.data.length)\n            return true;\n\n        let object = brush.currentMode().brushState();\n\n        for (let key in object) {\n            if (object.hasOwnProperty(key)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    pc.render.default = function() {\n        pc.clear('foreground');\n        pc.clear('highlight');\n\n        pc.renderBrushed.default();\n\n        __.data.forEach(path_foreground);\n    };\n\n    let foregroundQueue = renderQueue(path_foreground)\n        .rate(50)\n        .clear(function() {\n            pc.clear('foreground');\n            pc.clear('highlight');\n        });\n\n    pc.render.queue = function() {\n        pc.renderBrushed.queue();\n\n        foregroundQueue(__.data);\n    };\n\n    pc.renderBrushed.default = function() {\n        pc.clear('brushed');\n\n        if (isBrushed()) {\n            __.brushed.forEach(path_brushed);\n        }\n    };\n\n    let brushedQueue = renderQueue(path_brushed)\n        .rate(50)\n        .clear(function() {\n            pc.clear('brushed');\n        });\n\n    pc.renderBrushed.queue = function() {\n        if (isBrushed()) {\n            brushedQueue(__.brushed);\n        } else {\n            brushedQueue([]); // This is needed to clear the currently brushed items\n        }\n    };\n    function compute_cluster_centroids(d) {\n\n        let clusterCentroids = map();\n        let clusterCounts = map();\n        // determine clusterCounts\n        __.data.forEach(function(row) {\n            let scaled = __.dimensions[d].yscale(row[d]);\n            if (!clusterCounts.has(scaled)) {\n                clusterCounts.set(scaled, 0);\n            }\n            let count = clusterCounts.get(scaled);\n            clusterCounts.set(scaled, count + 1);\n        });\n\n        __.data.forEach(function(row) {\n            keys(__.dimensions).map(function(p, i) {\n                let scaled = __.dimensions[d].yscale(row[d]);\n                if (!clusterCentroids.has(scaled)) {\n                    let _map = map();\n                    clusterCentroids.set(scaled, _map);\n                }\n                if (!clusterCentroids.get(scaled).has(p)) {\n                    clusterCentroids.get(scaled).set(p, 0);\n                }\n                let value = clusterCentroids.get(scaled).get(p);\n                value += __.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n                clusterCentroids.get(scaled).set(p, value);\n            });\n        });\n\n        return clusterCentroids;\n\n    }\n\n    function is_brushed() {\n        return (__.brushed && __.brushed.length !== __.data.length);\n    }\n\n    function compute_centroids(row) {\n        let centroids = [];\n\n        let p = keys(__.dimensions);\n        let cols = p.length;\n        let a = 0.5;      // center between axes\n        for (let i = 0; i < cols; ++i) {\n            // centroids on 'real' axes\n            let x = position(p[i]);\n            let y = __.dimensions[p[i]].yscale(row[p[i]]);\n            centroids.push($V([x, y]));\n\n            // centroids on 'virtual' axes\n            if (i < cols - 1) {\n                let cx = x + a * (position(p[i+1]) - x);\n                let cy = y + a * (__.dimensions[p[i+1]].yscale(row[p[i+1]]) - y);\n                if (__.bundleDimension !== null) {\n                    let leftCentroid = __.clusterCentroids.get(__.dimensions[__.bundleDimension].yscale(row[__.bundleDimension])).get(p[i]);\n                    let rightCentroid = __.clusterCentroids.get(__.dimensions[__.bundleDimension].yscale(row[__.bundleDimension])).get(p[i+1]);\n                    let centroid = 0.5 * (leftCentroid + rightCentroid);\n                    cy = centroid + (1 - __.bundlingStrength) * (cy - centroid);\n                }\n                centroids.push($V([cx, cy]));\n            }\n        }\n\n        return centroids;\n    }\n\n    pc.compute_real_centroids = function(row) {\n        let realCentroids = [];\n\n        let p = keys(__.dimensions);\n        let cols = p.length;\n        let a = 0.5;\n\n        for (let i = 0; i < cols; ++i) {\n            let x = position(p[i]);\n            let y = __.dimensions[p[i]].yscale(row[p[i]]);\n            realCentroids.push([x, y]);\n        }\n\n        return realCentroids;\n    }\n\n    function compute_control_points(centroids) {\n\n        let cols = centroids.length;\n        let a = __.smoothness;\n        let cps = [];\n\n        cps.push(centroids[0]);\n        cps.push($V([centroids[0].e(1) + a*2*(centroids[1].e(1)-centroids[0].e(1)), centroids[0].e(2)]));\n        for (let col = 1; col < cols - 1; ++col) {\n            let mid = centroids[col];\n            let left = centroids[col - 1];\n            let right = centroids[col + 1];\n\n            let diff = left.subtract(right);\n            cps.push(mid.add(diff.x(a)));\n            cps.push(mid);\n            cps.push(mid.subtract(diff.x(a)));\n        }\n        cps.push($V([centroids[cols-1].e(1) + a*2*(centroids[cols-2].e(1)-centroids[cols-1].e(1)), centroids[cols-1].e(2)]));\n        cps.push(centroids[cols - 1]);\n\n        return cps;\n\n    };pc.shadows = function() {\n        flags.shadows = true;\n        pc.alphaOnBrushed(0.1);\n        pc.render();\n        return this;\n    };\n\n// draw dots with radius r on the axis line where data intersects\n    pc.axisDots = function(_r) {\n        let r = _r || 0.1;\n        let ctx = pc.ctx.marks;\n        let startAngle = 0;\n        let endAngle = 2 * Math.PI;\n        ctx.globalAlpha = min([ 1 / Math.pow(__.data.length, 1 / 2), 1 ]);\n        __.data.forEach(function(d) {\n            entries(__.dimensions).forEach(function(p, i) {\n                ctx.beginPath();\n                ctx.arc(position(p), __.dimensions[p.key].yscale(d[p]), r, startAngle, endAngle);\n                ctx.stroke();\n                ctx.fill();\n            });\n        });\n        return this;\n    };\n\n// draw single cubic bezier curve\n    function single_curve(d, ctx) {\n\n        let centroids = compute_centroids(d);\n        let cps = compute_control_points(centroids);\n\n        ctx.moveTo(cps[0].e(1), cps[0].e(2));\n        for (let i = 1; i < cps.length; i += 3) {\n            if (__.showControlPoints) {\n                for (let j = 0; j < 3; j++) {\n                    ctx.fillRect(cps[i+j].e(1), cps[i+j].e(2), 2, 2);\n                }\n            }\n            ctx.bezierCurveTo(cps[i].e(1), cps[i].e(2), cps[i+1].e(1), cps[i+1].e(2), cps[i+2].e(1), cps[i+2].e(2));\n        }\n    };\n\n// draw single polyline\n    function color_path(d, ctx) {\n        ctx.beginPath();\n        if ((__.bundleDimension !== null && __.bundlingStrength > 0) || __.smoothness > 0) {\n            single_curve(d, ctx);\n        } else {\n            single_path(d, ctx);\n        }\n        ctx.stroke();\n    };\n\n// draw many polylines of the same color\n    function paths(data, ctx) {\n        ctx.clearRect(-1, -1, w() + 2, h() + 2);\n        ctx.beginPath();\n        data.forEach(function(d) {\n            if ((__.bundleDimension !== null && __.bundlingStrength > 0) || __.smoothness > 0) {\n                single_curve(d, ctx);\n            } else {\n                single_path(d, ctx);\n            }\n        });\n        ctx.stroke();\n    };\n\n// returns the y-position just beyond the separating null value line\n    function getNullPosition() {\n        if (__.nullValueSeparator==\"bottom\") {\n            return h()+1;\n        } else if (__.nullValueSeparator==\"top\") {\n            return 1;\n        } else {\n            console.log(\"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\");\n        }\n        return h()+1;\n    };\n\n    function single_path(d, ctx) {\n        entries(__.dimensions).forEach(function(p, i) {  //p isn't really p\n            if (i == 0) {\n                ctx.moveTo(position(p.key), typeof d[p.key] =='undefined' ? getNullPosition() : __.dimensions[p.key].yscale(d[p.key]));\n            } else {\n                ctx.lineTo(position(p.key), typeof d[p.key] =='undefined' ? getNullPosition() : __.dimensions[p.key].yscale(d[p.key]));\n            }\n        });\n    };\n\n    function path_brushed(d, i) {\n        if (__.brushedColor !== null) {\n            ctx.brushed.strokeStyle = _functor(__.brushedColor)(d, i);\n        } else {\n            ctx.brushed.strokeStyle = _functor(__.color)(d, i);\n        }\n        return color_path(d, ctx.brushed)\n    };\n\n    function path_foreground(d, i) {\n        ctx.foreground.strokeStyle = _functor(__.color)(d, i);\n        if (is_brushed()) {\n            ctx.foreground.strokeStyle = \"#eee\";\n        }\n        return color_path(d, ctx.foreground);\n    };\n\n    function path_highlight(d, i) {\n        ctx.highlight.strokeStyle = _functor(__.color)(d, i);\n        return color_path(d, ctx.highlight);\n    };\n    pc.clear = function(layer) {\n        ctx[layer].clearRect(0, 0, w() + 2, h() + 2);\n\n        // This will make sure that the foreground items are transparent\n        // without the need for changing the opacity style of the foreground canvas\n        // as this would stop the css styling from working\n        if(layer === \"brushed\" && isBrushed()) {\n            ctx.brushed.fillStyle = pc.selection.style(\"background-color\");\n            ctx.brushed.globalAlpha = 1 - __.alphaOnBrushed;\n            ctx.brushed.fillRect(0, 0, w() + 2, h() + 2);\n            ctx.brushed.globalAlpha = __.alpha;\n        }\n        return this;\n    };\n    _rebind(pc, axis, \"ticks\", \"orient\", \"tickValues\", \"tickSubdivide\", \"tickSize\", \"tickPadding\", \"tickFormat\");\n\n    function flipAxisAndUpdatePCP(dimension) {\n        let g = pc.svg.selectAll(\".dimension\");\n        pc.flip(dimension);\n        pc.brushReset(dimension);\n        select(this.parentElement)\n            .transition()\n            .duration(__.animationTime)\n            .call(axis.scale(__.dimensions[dimension].yscale))\n        pc.render();\n    }\n\n    function rotateLabels() {\n        if (!__.rotateLabels) return;\n\n        let delta = event.deltaY;\n        delta = delta < 0 ? -5 : delta;\n        delta = delta > 0 ? 5 : delta;\n\n        __.dimensionTitleRotation += delta;\n        pc.svg.selectAll(\"text.label\")\n            .attr(\"transform\", \"translate(0,-5) rotate(\" + __.dimensionTitleRotation + \")\");\n        event.preventDefault();\n    }\n\n    function dimensionLabels(d) {\n        return __.dimensions[d].title ? __.dimensions[d].title : d;  // dimension display names\n    }\n\n    pc.createAxes = function() {\n        if (g) pc.removeAxes();\n        // Add a group element for each dimension.\n        g = pc.svg.selectAll(\".dimension\")\n            .data(pc.getOrderedDimensionKeys(), function(d) {\n                return d;\n            })\n            .enter().append(\"svg:g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", function(d) {\n                return \"translate(\" + xscale(d) + \")\";\n            });\n        // Add an axis and title.\n        g.append(\"svg:g\")\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(0,0)\")\n            .each(function(d) {\n                let axisElement = select(this).call( pc.applyAxisConfig(axis, __.dimensions[d]) );\n\n                axisElement.selectAll(\"path\")\n                    .style(\"fill\", \"none\")\n                    .style(\"stroke\", \"#222\")\n                    .style(\"shape-rendering\", \"crispEdges\");\n\n                axisElement.selectAll(\"line\")\n                    .style(\"fill\", \"none\")\n                    .style(\"stroke\", \"#222\")\n                    .style(\"shape-rendering\", \"crispEdges\");\n            })\n\n            .append(\"svg:text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"y\", 0)\n            .attr(\"transform\", \"translate(0,-5) rotate(\" + __.dimensionTitleRotation + \")\")\n            .attr(\"x\", 0)\n            .attr(\"class\", \"label\")\n            .text(dimensionLabels)\n            .on(\"dblclick\", flipAxisAndUpdatePCP)\n            .on(\"wheel\", rotateLabels);\n\n        if (__.nullValueSeparator==\"top\") {\n            pc.svg.append(\"line\")\n                .attr(\"x1\", 0)\n                .attr(\"y1\", 1+__.nullValueSeparatorPadding.top)\n                .attr(\"x2\", w())\n                .attr(\"y2\", 1+__.nullValueSeparatorPadding.top)\n                .attr(\"stroke-width\", 1)\n                .attr(\"stroke\", \"#777\")\n                .attr(\"fill\", \"none\")\n                .attr(\"shape-rendering\", \"crispEdges\");\n        } else if (__.nullValueSeparator==\"bottom\") {\n            pc.svg.append(\"line\")\n                .attr(\"x1\", 0)\n                .attr(\"y1\", h()+1-__.nullValueSeparatorPadding.bottom)\n                .attr(\"x2\", w())\n                .attr(\"y2\", h()+1-__.nullValueSeparatorPadding.bottom)\n                .attr(\"stroke-width\", 1)\n                .attr(\"stroke\", \"#777\")\n                .attr(\"fill\", \"none\")\n                .attr(\"shape-rendering\", \"crispEdges\");\n        }\n\n        flags.axes= true;\n        return this;\n    };\n\n    pc.removeAxes = function() {\n        g.remove();\n        g = undefined;\n        return this;\n    };\n\n    pc.updateAxes = function(animationTime) {\n        if (typeof animationTime === 'undefined') {\n            animationTime = __.animationTime;\n        }\n        let g_data = pc.svg.selectAll(\".dimension\").data(pc.getOrderedDimensionKeys());\n        // Enter\n        g_data.enter().append(\"svg:g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", function(p) { return \"translate(\" + position(p) + \")\"; })\n            .style(\"opacity\", 0)\n            .append(\"svg:g\")\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(0,0)\")\n            .each(function(d) {\n                let axisElement = select(this).call( pc.applyAxisConfig(axis, __.dimensions[d]) );\n\n                axisElement.selectAll(\"path\")\n                    .style(\"fill\", \"none\")\n                    .style(\"stroke\", \"#222\")\n                    .style(\"shape-rendering\", \"crispEdges\");\n\n                axisElement.selectAll(\"line\")\n                    .style(\"fill\", \"none\")\n                    .style(\"stroke\", \"#222\")\n                    .style(\"shape-rendering\", \"crispEdges\");\n            })\n            .append(\"svg:text\")\n            .attr({\n                \"text-anchor\": \"middle\",\n                \"y\": 0,\n                \"transform\": \"translate(0,-5) rotate(\" + __.dimensionTitleRotation + \")\",\n                \"x\": 0,\n                \"class\": \"label\"\n            })\n            .text(dimensionLabels)\n            .on(\"dblclick\", flipAxisAndUpdatePCP)\n            .on(\"wheel\", rotateLabels);\n\n        // Update\n        g_data.attr(\"opacity\", 0);\n        g_data.select(\".axis\")\n            .transition()\n            .duration(animationTime)\n            .each(function(d) { select(this).call( pc.applyAxisConfig(axis, __.dimensions[d]) )\n            });\n        g_data.select(\".label\")\n            .transition()\n            .duration(animationTime)\n            .text(dimensionLabels)\n            .attr(\"transform\", \"translate(0,-5) rotate(\" + __.dimensionTitleRotation + \")\");\n\n        // Exit\n        g_data.exit().remove();\n\n        g = pc.svg.selectAll(\".dimension\");\n        g.transition().duration(animationTime)\n            .attr(\"transform\", function(p) { return \"translate(\" + position(p) + \")\"; })\n            .style(\"opacity\", 1);\n\n        pc.svg.selectAll(\".axis\")\n            .transition()\n            .duration(animationTime)\n            .each(function(d) { select(this).call( pc.applyAxisConfig(axis, __.dimensions[d]) );\n            });\n\n        if (flags.brushable) pc.brushable();\n        if (flags.reorderable) pc.reorderable();\n        if (pc.brushMode() !== \"None\") {\n            let mode = pc.brushMode();\n            pc.brushMode(\"None\");\n            pc.brushMode(mode);\n        }\n        return this;\n    };\n\n    pc.applyAxisConfig = function(axis, dimension) {\n        let axisCfg;\n\n        switch (dimension.orient) {\n            case 'left':\n                axisCfg = axisLeft(dimension.yscale);\n                break;\n            case 'right':\n                axisCfg = axisRight(dimension.yscale);\n\n                break;\n            case 'top':\n                axisCfg = axisTop(dimension.yscale);\n\n                break;\n            case 'bottom':\n                axisCfg = axisBottom(dimension.yscale);\n\n                break;\n            default:\n                axisCfg = axisLeft(dimension.yscale);\n\n                break;\n        }\n\n        axisCfg.ticks(dimension.ticks)\n            .tickValues(dimension.tickValues)\n            .tickSizeInner(dimension.innerTickSize)\n            .tickSizeOuter(dimension.outerTickSize)\n            .tickPadding(dimension.tickPadding)\n            .tickFormat(dimension.tickFormat);\n\n        return axisCfg;\n    };\n\n    pc.brushable = function() {\n        if (!g) pc.createAxes();\n\n        // Add and store a brush for each axis.\n        g.append(\"svg:g\")\n            .attr(\"class\", \"brush\")\n            .each(function(d) {\n                if (__.dimensions[d] !== undefined) {\n                    __.dimensions[d][\"brush\"] = brushY(select(this))\n                        .extent([[-15, 0], [15, __.dimensions[d].yscale.range()[0]]]);\n                    select(this).call(\n                        __.dimensions[d][\"brush\"]\n                            .on(\"start\", function() {\n                                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                                    pc.brushReset();\n                                }\n                            })\n                            .on(\"brush\", function () {\n                                if (!event.sourceEvent.ctrlKey) {\n                                    pc.brush();\n                                }\n                            })\n                            .on(\"end\", function() {\n                                // save brush selection is ctrl key is held\n                                // store important brush information and\n                                // the html element of the selection,\n                                // to make a dummy selection element\n                                if (event.sourceEvent.ctrlKey) {\n                                    let html = select(this).select('.selection').nodes()[0].outerHTML;\n                                    html = html.replace('class=\"selection\"', ('class=\"selection dummy' + ' selection-' + __.brushes.length + '\"'));\n                                    let dat = select(this).nodes()[0].__data__;\n                                    let brush = {\n                                        id: __.brushes.length,\n                                        extent: brushSelection(this),\n                                        html: html,\n                                        data: dat\n                                    };\n                                    __.brushes.push(brush);\n                                    select(\n                                        select(this)\n                                            .nodes()[0].parentNode\n                                    )\n                                        .select('.axis')\n                                        .nodes()[0].outerHTML += html;\n                                    pc.brush();\n                                    __.dimensions[d].brush.move(select(this, null));\n                                    select(this).select(\".selection\").attr(\"style\", \"display:none\");\n                                    pc.brushable();\n                                } else {\n                                    pc.brush();\n                                }\n                            })\n                    );\n                    select(this)\n                        .on(\"dblclick\", function () {\n                            pc.brushReset(d);\n                        });\n                }\n            });\n\n        flags.brushable = true;\n        return this;\n    };\n\n    pc.brush = function() {\n        __.brushed = pc.selected();\n        render.call(\"render\");\n    }\n\n    pc.brushReset = function(dimension) {\n        let brushesToKeep = [];\n        for (let j = 0; j < __.brushes.length; j++) {\n            if (__.brushes[j].data !== dimension) {\n                brushesToKeep.push(__.brushes[j]);\n            }\n        }\n\n        __.brushes = brushesToKeep;\n        __.brushed = false;\n\n        if (g) {\n            let nodes = selectAll(\".brush\").nodes();\n            for (let i = 0; i < nodes.length; i++) {\n                if (nodes[i].__data__ === dimension) {\n                    // remove all dummy brushes for this axis or the real brush\n                    select(select(nodes[i]).nodes()[0].parentNode).selectAll(\".dummy\").remove();\n                    __.dimensions[dimension].brush.move(select(nodes[i], null));\n                }\n            }\n        }\n\n        return this;\n    };\n\n    pc.selected = function() {\n        let actives = [];\n        let extents = [];\n        let ranges = {};\n        //get brush selections from each node, convert to actual values\n        //invert order of values in array to comply with the parcoords architecture\n        if (__.brushes.length === 0) {\n            let nodes = selectAll(\".brush\").nodes();\n            for (let k = 0; k < nodes.length; k++) {\n                if (brushSelection(nodes[k]) !== null) {\n                    actives.push(nodes[k].__data__);\n                    let values = [];\n                    let ranger = brushSelection(nodes[k]);\n                    if (typeof __.dimensions[nodes[k].__data__].yscale.domain()[0] === \"number\") {\n                        for (let i = 0; i < ranger.length; i++) {\n                            if (actives.includes(nodes[k].__data__) && __.flipAxes.includes(nodes[k].__data__)) {\n                                values.push(__.dimensions[nodes[k].__data__].yscale.invert(ranger[i]));\n                            } else if (__.dimensions[nodes[k].__data__].yscale() !== 1)  {\n                                values.unshift(__.dimensions[nodes[k].__data__].yscale.invert(ranger[i]));\n                            }\n                        }\n                        extents.push(values)\n                        for (let ii = 0; ii < extents.length; ii++) {\n                            if (extents[ii].length === 0) {\n                                extents[ii] = [1, 1];\n                            }\n                        }\n                    } else {\n                        ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n                        let dimRange = __.dimensions[nodes[k].__data__].yscale.range();\n                        let dimDomain = __.dimensions[nodes[k].__data__].yscale.domain();\n                        for (let j = 0; j < dimRange.length; j++) {\n                            if ((dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) && actives.includes(nodes[k].__data__) && __.flipAxes.includes(nodes[k].__data__)) {\n                                values.push(dimRange[j]);\n                            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n                                values.unshift(dimRange[j]);\n                            }\n                        }\n                        extents.push(values);\n                        for (let ii = 0; ii < extents.length; ii++) {\n                            if (extents[ii].length === 0) {\n                                extents[ii] = [1, 1];\n                            }\n                        }\n                    }\n                }\n            }\n            // test if within range\n            let within = {\n                \"date\": function(d,p,dimension) {\n                    let category = d[p];\n                    let categoryIndex = __.dimensions[p].yscale.domain().indexOf(category);\n                    let categoryRangeValue = __.dimensions[p].yscale.range()[categoryIndex];\n                    return categoryRangeValue >= ranges[p][0] && categoryRangeValue <= ranges[p][1];\n                },\n                \"number\": function(d,p,dimension) {\n                    return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n                },\n                \"string\": function(d,p,dimension) {\n                    let category = d[p];\n                    let categoryIndex = __.dimensions[p].yscale.domain().indexOf(category);\n                    let categoryRangeValue = __.dimensions[p].yscale.range()[categoryIndex];\n                    console.log(ranges, p);\n                    return categoryRangeValue >= ranges[p][0] && categoryRangeValue <= ranges[p][1];\n                }\n            };\n            return __.data\n                .filter(function(d) {\n                    return actives.every(function(p, dimension) {\n                        return within[__.dimensions[p].type](d,p,dimension);\n                    });\n                });\n        } else {\n            // need to get data from each brush instead of each axis\n            // first must find active axes by iterating through all brushes\n            // then go through similiar process as above.\n            let multiBrushData = [];\n            for (let idx = 0; idx < __.brushes.length; idx++) {\n                let brush = __.brushes[idx];\n                let values = [];\n                let ranger = brush.extent;\n                let actives = [brush.data];\n                if (typeof __.dimensions[brush.data].yscale.domain()[0] === \"number\") {\n                    for (let i = 0; i < ranger.length; i++) {\n                        if (actives.includes(brush.data) && __.flipAxes.includes(brush.data)) {\n                            values.push(__.dimensions[brush.data].yscale.invert(ranger[i]));\n                        } else if (__.dimensions[brush.data].yscale() !== 1)  {\n                            values.unshift(__.dimensions[brush.data].yscale.invert(ranger[i]));\n                        }\n                    }\n                    extents.push(values)\n                    for (let ii = 0; ii < extents.length; ii++) {\n                        if (extents[ii].length === 0) {\n                            extents[ii] = [1, 1];\n                        }\n                    }\n                } else {\n                    ranges[brush.data] = brush.extent;\n                    let dimRange = __.dimensions[brush.data].yscale.range();\n                    let dimDomain = __.dimensions[brush.data].yscale.domain();\n                    for (let j = 0; j < dimRange.length; j++) {\n                        if ((dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) && actives.includes(brush.data) && __.flipAxes.includes(brush.data)) {\n                            values.push(dimRange[j]);\n                        } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n                            values.unshift(dimRange[j]);\n                        }\n                    }\n                    extents.push(values);\n                    for (let ii = 0; ii < extents.length; ii++) {\n                        if (extents[ii].length === 0) {\n                            extents[ii] = [1, 1];\n                        }\n                    }\n                }\n                let within = {\n                    \"date\": function(d,p,dimension) {\n                        let category = d[p];\n                        let categoryIndex = __.dimensions[p].yscale.domain().indexOf(category);\n                        let categoryRangeValue = __.dimensions[p].yscale.range()[categoryIndex];\n                        return categoryRangeValue >= ranges[p][0] && categoryRangeValue <= ranges[p][1];\n                    },\n                    \"number\": function(d,p,dimension) {\n                        return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n                    },\n                    \"string\": function(d,p,dimension) {\n                        let category = d[p];\n                        let categoryIndex = __.dimensions[p].yscale.domain().indexOf(category);\n                        let categoryRangeValue = __.dimensions[p].yscale.range()[categoryIndex];\n                        return categoryRangeValue >= ranges[p][0] && categoryRangeValue <= ranges[p][1];\n                    }\n                };\n\n                // filter data, but instead of returning it now,\n                // put it into multiBrush data which is returned after\n                // all brushes are iterated through.\n                let filtered = __.data\n                    .filter(function(d) {\n                        return actives.every(function(p, dimension) {\n                            return within[__.dimensions[p].type](d,p,dimension);\n                        });\n                    });\n                for (let z = 0; z < filtered.length; z++) {\n                    multiBrushData.push(filtered[z]);\n                }\n                actives = [];\n                ranges = {};\n            }\n            return multiBrushData;\n        }\n\n\n    };\n\n// Jason Davies, http://bl.ocks.org/1341281\n    pc.reorderable = function() {\n        if (!g) pc.createAxes();\n        g.style(\"cursor\", \"move\")\n            .call(drag()\n                .on(\"start\", function(d) {\n                    dragging[d] = this.__origin__ = xscale(d);\n                })\n                .on(\"drag\", function(d) {\n                    dragging[d] = Math.min(w(), Math.max(0, this.__origin__ += event.dx));\n                    pc.sortDimensions();\n                    xscale.domain(pc.getOrderedDimensionKeys());\n                    pc.render();\n                    g.attr(\"transform\", function(d) {\n                        return \"translate(\" + position(d) + \")\";\n                    });\n                })\n                .on(\"end\", function(d) {\n                    delete this.__origin__;\n                    delete dragging[d];\n                    select(this).transition().attr(\"transform\", \"translate(\" + xscale(d) + \")\");\n                    pc.render();\n                }));\n        flags.reorderable = true;\n        return this;\n    };\n\n// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\n    pc.reorder = function(rowdata) {\n        let firstDim = pc.getOrderedDimensionKeys()[0];\n\n        pc.sortDimensionsByRowData(rowdata);\n        // NOTE: this is relatively cheap given that:\n        // number of dimensions < number of data items\n        // Thus we check equality of order to prevent rerendering when this is the case.\n        let reordered = false;\n        reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n        if (reordered) {\n            xscale.domain(pc.getOrderedDimensionKeys());\n            let highlighted = __.highlighted.slice(0);\n            pc.unhighlight();\n\n            g.transition()\n                .duration(1500)\n                .attr(\"transform\", function(d) {\n                    return \"translate(\" + xscale(d) + \")\";\n                });\n            pc.render();\n\n            // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n            if (highlighted.length !== 0) {\n                pc.highlight(highlighted);\n            }\n        }\n    }\n\n    pc.sortDimensionsByRowData = function(rowdata) {\n        let copy = __.dimensions;\n        let positionSortedKeys = keys(__.dimensions).sort(function(a, b) {\n            let pixelDifference = __.dimensions[a].yscale(rowdata[a]) - __.dimensions[b].yscale(rowdata[b]);\n\n            // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n            // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n            // variable name in that case.\n            if (pixelDifference === 0) {\n                return a.localeCompare(b);\n            } // else\n            return pixelDifference;\n        });\n        __.dimensions = {};\n        positionSortedKeys.forEach(function(p, i){\n            __.dimensions[p] = copy[p];\n            __.dimensions[p].index = i;\n        });\n    }\n\n    pc.sortDimensions = function() {\n        let copy = __.dimensions;\n        let positionSortedKeys = keys(__.dimensions).sort(function(a, b) {\n            if (position(a) - position(b) === 0) {\n                return 1;\n            } else {\n                return position(a) - position(b);\n            }\n        });\n        __.dimensions = {};\n        positionSortedKeys.forEach(function(p, i){\n            __.dimensions[p] = copy[p];\n            __.dimensions[p].index = i;\n        })\n    };\n\n// pairs of adjacent dimensions\n    pc.adjacent_pairs = function(arr) {\n        let ret = [];\n        for (let i = 0; i < arr.length-1; i++) {\n            ret.push([arr[i],arr[i+1]]);\n        };\n        return ret;\n    };\n\n    let brush = {\n        modes: {\n            \"None\": {\n                install: function(pc) {},            // Nothing to be done.\n                uninstall: function(pc) {},          // Nothing to be done.\n                selected: function() { return []; }, // Nothing to return\n                brushState: function() { return {}; }\n            }\n        },\n        mode: \"None\",\n        predicate: \"AND\",\n        currentMode: function() {\n            return this.modes[this.mode];\n        }\n    };\n\n// This function can be used for 'live' updates of brushes. That is, during the\n// specification of a brush, this method can be called to update the view.\n//\n// @param newSelection - The new set of data items that is currently contained\n//                       by the brushes\n    function brushUpdated(newSelection) {\n        __.brushed = newSelection;\n        events.call('brush', pc,__.brushed);\n        pc.renderBrushed();\n    }\n\n    function brushPredicate(predicate) {\n        if (!arguments.length) { return brush.predicate; }\n\n        predicate = String(predicate).toUpperCase();\n        if (predicate !== \"AND\" && predicate !== \"OR\") {\n            throw new Error(\"Invalid predicate \" + predicate);\n        }\n\n        brush.predicate = predicate;\n        __.brushed = brush.currentMode().selected();\n        pc.renderBrushed();\n        return pc;\n    }\n\n    pc.brushModes = function() {\n        return Object.getOwnPropertyNames(brush.modes);\n    };\n\n    pc.brushMode = function(mode) {\n        if (arguments.length === 0) {\n            return brush.mode;\n        }\n\n        if (pc.brushModes().indexOf(mode) === -1) {\n            throw new Error(\"pc.brushmode: Unsupported brush mode: \" + mode);\n        }\n\n        // Make sure that we don't trigger unnecessary events by checking if the mode\n        // actually changes.\n        if (mode !== brush.mode) {\n            // When changing brush modes, the first thing we need to do is clearing any\n            // brushes from the current mode, if any.\n            if (brush.mode !== \"None\") {\n                pc.brushReset();\n            }\n\n            // Next, we need to 'uninstall' the current brushMode.\n            brush.modes[brush.mode].uninstall(pc);\n            // Finally, we can install the requested one.\n            brush.mode = mode;\n            brush.modes[brush.mode].install();\n            if (mode === \"None\") {\n                delete pc.brushPredicate;\n            } else {\n                pc.brushPredicate = brushPredicate;\n            }\n        }\n\n        return pc;\n    };\n\n    // brush mode: 1D-Axes\n    const install1DAxes = ()=> {\n        let brushes = {};\n        let brushNodes = {};\n\n        //https://github.com/d3/d3-brush/issues/10\n        function is_brushed(p) {\n            return brushSelection(brushNodes[p]) !== null;\n        }\n\n        // data within extents\n        function selected() {\n            let actives = keys(__.dimensions).filter(is_brushed),\n                extents = actives.map(function(p) {\n                    let _brushRange = brushSelection(brushNodes[p]);\n                    let _projected = [__.dimensions[p].yscale.invert(_brushRange[1]), __.dimensions[p].yscale.invert(_brushRange[0])];\n                    return _projected;\n                });\n            // We don't want to return the full data set when there are no axes brushed.\n            // Actually, when there are no axes brushed, by definition, no items are\n            // selected. So, let's avoid the filtering and just return false.\n            //if (actives.length === 0) return false;\n\n            // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n            if (actives.length === 0) return __.data;\n\n            // test if within range\n            let within = {\n                \"date\": function(d,p,dimension) {\n                    if (typeof __.dimensions[p].yscale.rangePoints === \"function\") { // if it is ordinal\n                        return extents[dimension][0] <= __.dimensions[p].yscale(d[p]) && __.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n                    } else {\n                        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1]\n                    }\n                },\n                \"number\": function(d,p,dimension) {\n                    if (typeof __.dimensions[p].yscale.rangePoints === \"function\") { // if it is ordinal\n                        return extents[dimension][0] <= __.dimensions[p].yscale(d[p]) && __.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n                    } else {\n                        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1]\n                    }\n                },\n                \"string\": function(d,p,dimension) {\n                    return extents[dimension][0] <= __.dimensions[p].yscale(d[p]) && __.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n                }\n            };\n\n            return __.data\n                .filter(function(d) {\n                    switch(brush.predicate) {\n                        case \"AND\":\n                            return actives.every(function(p, dimension) {\n                                return within[__.dimensions[p].type](d,p,dimension);\n                            });\n                        case \"OR\":\n                            return actives.some(function(p, dimension) {\n                                return within[__.dimensions[p].type](d,p,dimension);\n                            });\n                        default:\n                            throw new Error(\"Unknown brush predicate \" + __.brushPredicate);\n                    }\n                });\n        };\n\n        function brushExtents(extents) {\n            if(typeof(extents) === 'undefined')\n            {\n                let extents = {};\n                keys(__.dimensions).forEach(function(d) {\n                    let brush = brushes[d];\n                    //todo: brush check\n                    if (brush !== undefined && brushSelection(brushNodes[d]) !== null) {\n                        let extent = brush.extent();\n                        extents[d] = extent;\n                    }\n                });\n                return extents;\n            }\n            else\n            {\n                //first get all the brush selections\n                let brushSelections = {};\n                g.selectAll('.brush')\n                    .each(function(d) {\n                        brushSelections[d] = select(this);\n\n                    });\n\n                // loop over each dimension and update appropriately (if it was passed in through extents)\n                keys(__.dimensions).forEach(function(d) {\n                    if (extents[d] === undefined){\n                        return;\n                    }\n\n                    let brush = brushes[d];\n                    if (brush !== undefined) {\n                        //update the extent\n                        brush.extent(extents[d]);\n\n                        //redraw the brush\n                        brushSelections[d]\n                            .transition()\n                            .duration(0)\n                            .call(brush);\n\n                        //fire some events\n                        brush.event(brushSelections[d]);\n                    }\n                });\n\n                //redraw the chart\n                pc.renderBrushed();\n\n                return pc;\n            }\n        }\n\n        function brushFor(axis, _selector) {\n            let _brush = brushY(_selector)\n                .extent([[-15, 0], [15, __.dimensions[axis].yscale.range()[0]]]);\n\n            _brush\n                .on(\"start\", function() {\n                    if(event.sourceEvent !== null) {\n                        events.call('start', pc, __.brushed);\n                        event.sourceEvent.stopPropagation();\n                    }\n                })\n                .on(\"brush\", function() {\n                    brushUpdated(selected());\n                })\n                .on(\"end\", function() {\n                    events.call('end', pc, __.brushed);\n                });\n\n            brushes[axis] = _brush;\n            brushNodes[axis] = _selector.node();\n            return _brush;\n        };\n\n        function brushReset(dimension) {\n            if (dimension===undefined) {\n                __.brushed = false;\n                if (g) {\n                    g.selectAll('.brush')\n                        .each(function(d) {\n                            select(this)\n                                .call(brushes[d].move, null);\n                        });\n                    pc.renderBrushed();\n                }\n            }\n            else {\n                if (g) {\n                    g.selectAll('.brush')\n                        .each(function(d) {\n                            if (d!=dimension) return;\n                            select(this)\n                                .call(brushes[d].move, null);\n                            brushes[d].event(select(this));\n                        });\n                    pc.renderBrushed();\n                }\n            }\n            return this;\n        };\n\n        function install() {\n            if (!g) pc.createAxes();\n            // Add and store a brush for each axis.\n            let brush = g.append(\"svg:g\")\n                .attr(\"class\", \"brush\")\n                .each(function(d) {\n                    select(this).call(brushFor(d, select(this)));\n                })\n            brush.selectAll(\"rect\")\n                .style(\"visibility\", null)\n                .attr(\"x\", -15)\n                .attr(\"width\", 30);\n\n            brush.selectAll(\"rect.background\")\n                .style(\"fill\", \"transparent\");\n\n            brush.selectAll(\"rect.extent\")\n                .style(\"fill\", \"rgba(255,255,255,0.25)\")\n                .style(\"stroke\", \"rgba(0,0,0,0.6)\");\n\n            brush.selectAll(\".resize rect\")\n                .style(\"fill\", \"rgba(0,0,0,0.1)\");\n\n            pc.brushExtents = brushExtents;\n            pc.brushReset = brushReset;\n            return pc;\n        };\n\n        brush.modes[\"1D-axes\"] = {\n            install: install,\n            uninstall: function() {\n                g.selectAll(\".brush\").remove();\n                brushes = {};\n                delete pc.brushExtents;\n                delete pc.brushReset;\n            },\n            selected: selected,\n            brushState: brushExtents\n        }\n    }\n\n    // brush mode: 2D-strums\n    // bl.ocks.org/syntagmatic/5441022\n    const install2DStrums = ()=> {\n        let strums = {},\n            strumRect;\n\n        function drawStrum(strum, activePoint) {\n            let _svg = pc.selection.select(\"svg\").select(\"g#strums\"),\n                id = strum.dims.i,\n                points = [strum.p1, strum.p2],\n                _line = _svg.selectAll(\"line#strum-\" + id).data([strum]),\n                circles = _svg.selectAll(\"circle#strum-\" + id).data(points),\n                _drag = drag();\n\n            _line.enter()\n                .append(\"line\")\n                .attr(\"id\", \"strum-\" + id)\n                .attr(\"class\", \"strum\");\n\n            _line\n                .attr(\"x1\", function(d) {\n                    return d.p1[0]; })\n                .attr(\"y1\", function(d) {\n                    return d.p1[1]; })\n                .attr(\"x2\", function(d) {\n                    return d.p2[0]; })\n                .attr(\"y2\", function(d) {\n                    return d.p2[1]; })\n                .attr(\"stroke\", \"black\")\n                .attr(\"stroke-width\", 2);\n\n            _drag\n                .on(\"drag\", function(d, i) {\n                    let ev = event;\n                    i = i + 1;\n                    strum[\"p\" + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\n                    strum[\"p\" + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n                    drawStrum(strum, i - 1);\n                })\n                .on(\"end\", onDragEnd());\n\n            circles.enter()\n                .append(\"circle\")\n                .attr(\"id\", \"strum-\" + id)\n                .attr(\"class\", \"strum\");\n\n            circles\n                .attr(\"cx\", function(d) { return d[0]; })\n                .attr(\"cy\", function(d) { return d[1]; })\n                .attr(\"r\", 5)\n                .style(\"opacity\", function(d, i) {\n                    return (activePoint !== undefined && i === activePoint) ? 0.8 : 0;\n                })\n                .on(\"mouseover\", function() {\n                    select(this).style(\"opacity\", 0.8);\n                })\n                .on(\"mouseout\", function() {\n                    select(this).style(\"opacity\", 0);\n                })\n                .call(_drag);\n        }\n\n        function dimensionsForPoint(p) {\n            let dims = { i: -1, left: undefined, right: undefined };\n            keys(__.dimensions).some(function(dim, i) {\n                if (xscale(dim) < p[0]) {\n                    let next = keys(__.dimensions)[pc.getOrderedDimensionKeys().indexOf(dim)+1];\n                    dims.i = i;\n                    dims.left = dim;\n                    dims.right = next;\n                    return false;\n                }\n                return true;\n            });\n\n            if (dims.left === undefined) {\n                // Event on the left side of the first axis.\n                dims.i = 0;\n                dims.left = pc.getOrderedDimensionKeys()[0];\n                dims.right = pc.getOrderedDimensionKeys()[1];\n            } else if (dims.right === undefined) {\n                // Event on the right side of the last axis\n                dims.i = keys(__.dimensions).length - 1;\n                dims.right = dims.left;\n                dims.left = pc.getOrderedDimensionKeys()[keys(__.dimensions).length - 2];\n            }\n\n            return dims;\n        }\n\n        function onDragStart() {\n            // First we need to determine between which two axes the sturm was started.\n            // This will determine the freedom of movement, because a strum can\n            // logically only happen between two axes, so no movement outside these axes\n            // should be allowed.\n            return function() {\n                let p = mouse(strumRect.node()),\n                    dims,\n                    strum;\n\n                p[0] = p[0] - __.margin.left;\n                p[1] = p[1] - __.margin.top;\n\n                dims = dimensionsForPoint(p),\n                    strum = {\n                        p1: p,\n                        dims: dims,\n                        minX: xscale(dims.left),\n                        maxX: xscale(dims.right),\n                        minY: 0,\n                        maxY: h()\n                    };\n\n                strums[dims.i] = strum;\n                strums.active = dims.i;\n\n                // Make sure that the point is within the bounds\n                strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n                strum.p2 = strum.p1.slice();\n            };\n        }\n\n        function onDrag() {\n            return function() {\n                let ev = event,\n                    strum = strums[strums.active];\n\n                // Make sure that the point is within the bounds\n                strum.p2[0] = Math.min(Math.max(strum.minX + 1, ev.x - __.margin.left), strum.maxX);\n                strum.p2[1] = Math.min(Math.max(strum.minY, ev.y - __.margin.top), strum.maxY);\n                drawStrum(strum, 1);\n            };\n        }\n\n        function containmentTest(strum, width) {\n            let p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n                p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n                m1 = 1 - width / p1[0],\n                b1 = p1[1] * (1 - m1),\n                m2 = 1 - width / p2[0],\n                b2 = p2[1] * (1 - m2);\n\n            // test if point falls between lines\n            return function(p) {\n                let x = p[0],\n                    y = p[1],\n                    y1 = m1 * x + b1,\n                    y2 = m2 * x + b2;\n\n                if (y > Math.min(y1, y2) && y < Math.max(y1, y2)) {\n                    return true;\n                }\n\n                return false;\n            };\n        }\n\n        function selected() {\n            let ids = Object.getOwnPropertyNames(strums),\n                brushed = __.data;\n\n            // Get the ids of the currently active strums.\n            ids = ids.filter(function(d) {\n                return !isNaN(d);\n            });\n\n            function crossesStrum(d, id) {\n                let strum = strums[id],\n                    test = containmentTest(strum, strums.width(id)),\n                    d1 = strum.dims.left,\n                    d2 = strum.dims.right,\n                    y1 = __.dimensions[d1].yscale,\n                    y2 = __.dimensions[d2].yscale,\n                    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n                return test(point);\n            }\n\n            if (ids.length === 0) { return brushed; }\n\n            return brushed.filter(function(d) {\n                switch(brush.predicate) {\n                    case \"AND\":\n                        return ids.every(function(id) { return crossesStrum(d, id); });\n                    case \"OR\":\n                        return ids.some(function(id) { return crossesStrum(d, id); });\n                    default:\n                        throw new Error(\"Unknown brush predicate \" + __.brushPredicate);\n                }\n            });\n        }\n\n        function removeStrum() {\n            let strum = strums[strums.active],\n                svg = pc.selection.select(\"svg\").select(\"g#strums\");\n\n            delete strums[strums.active];\n            strums.active = undefined;\n            svg.selectAll(\"line#strum-\" + strum.dims.i).remove();\n            svg.selectAll(\"circle#strum-\" + strum.dims.i).remove();\n        }\n\n        function onDragEnd() {\n            return function() {\n                let brushed = __.data,\n                    strum = strums[strums.active];\n\n                // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n                // considered a drag without move. So we have to deal with that case\n                if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n                    removeStrum(strums);\n                }\n\n                brushed = selected(strums);\n                strums.active = undefined;\n                __.brushed = brushed;\n                pc.renderBrushed();\n                events.call('end', pc, __.brushed);\n            };\n        }\n\n        function brushReset(strums) {\n            return function() {\n                let ids = Object.getOwnPropertyNames(strums).filter(function(d) {\n                    return !isNaN(d);\n                });\n\n                ids.forEach(function(d) {\n                    strums.active = d;\n                    removeStrum(strums);\n                });\n                onDragEnd(strums)();\n            };\n        }\n\n        function install() {\n            if (!g) pc.createAxes();\n            \n            let _drag = drag();\n\n            // Map of current strums. Strums are stored per segment of the PC. A segment,\n            // being the area between two axes. The left most area is indexed at 0.\n            strums.active = undefined;\n            // Returns the width of the PC segment where currently a strum is being\n            // placed. NOTE: even though they are evenly spaced in our current\n            // implementation, we keep for when non-even spaced segments are supported as\n            // well.\n            strums.width = function(id) {\n                let strum = strums[id];\n\n                if (strum === undefined) {\n                    return undefined;\n                }\n\n                return strum.maxX - strum.minX;\n            };\n\n            pc.on(\"axesreorder.strums\", function() {\n                let ids = Object.getOwnPropertyNames(strums).filter(function(d) {\n                    return !isNaN(d);\n                });\n\n                // Checks if the first dimension is directly left of the second dimension.\n                function consecutive(first, second) {\n                    let length = keys(__.dimensions).length;\n                    return keys(__.dimensions).some(function(d, i) {\n                        return (d === first)\n                            ? i + i < length && __.dimensions[i + 1] === second\n                            : false;\n                    });\n                }\n\n                if (ids.length > 0) { // We have some strums, which might need to be removed.\n                    ids.forEach(function(d) {\n                        let dims = strums[d].dims;\n                        strums.active = d;\n                        // If the two dimensions of the current strum are not next to each other\n                        // any more, than we'll need to remove the strum. Otherwise we keep it.\n                        if (!consecutive(dims.left, dims.right)) {\n                            removeStrum(strums);\n                        }\n                    });\n                    onDragEnd(strums)();\n                }\n            });\n\n            // Add a new svg group in which we draw the strums.\n            pc.selection.select(\"svg\").append(\"g\")\n                .attr(\"id\", \"strums\")\n                .attr(\"transform\", \"translate(\" + __.margin.left + \",\" + __.margin.top + \")\");\n\n            // Install the required brushReset function\n            pc.brushReset = brushReset(strums);\n\n            _drag\n                .on(\"start\", onDragStart(strums))\n                .on(\"drag\", onDrag(strums))\n                .on(\"end\", onDragEnd(strums));\n\n            // NOTE: The styling needs to be done here and not in the css. This is because\n            //       for 1D brushing, the canvas layers should not listen to\n            //       pointer-events._.\n            strumRect = pc.selection.select(\"svg\").insert(\"rect\", \"g#strums\")\n                .attr(\"id\", \"strum-events\")\n                .attr(\"x\", __.margin.left)\n                .attr(\"y\", __.margin.top)\n                .attr(\"width\", w())\n                .attr(\"height\", h() + 2)\n                .style(\"opacity\", 0)\n                .call(_drag);\n        }\n\n        brush.modes[\"2D-strums\"] = {\n            install: install,\n            uninstall: function() {\n                pc.selection.select(\"svg\").select(\"g#strums\").remove();\n                pc.selection.select(\"svg\").select(\"rect#strum-events\").remove();\n                pc.on(\"axesreorder.strums\", undefined);\n                delete pc.brushReset;\n\n                strumRect = undefined;\n            },\n            selected: selected,\n            brushState: function () { return strums; }\n        };\n\n    }\n\n\n// brush mode: angular\n// code based on 2D.strums.js\n\n    const installAngularBrush = ()=> {\n        let arcs = {},\n            strumRect;\n\n        function drawStrum(arc, activePoint) {\n            let svg = pc.selection.select(\"svg\").select(\"g#arcs\"),\n                id = arc.dims.i,\n                points = [arc.p2, arc.p3],\n                _line = svg.selectAll(\"line#arc-\" + id).data([{p1:arc.p1,p2:arc.p2},{p1:arc.p1,p2:arc.p3}]),\n                circles = svg.selectAll(\"circle#arc-\" + id).data(points),\n                _drag = drag(),\n                _path = svg.selectAll(\"path#arc-\" + id).data([arc]);\n\n            _path.enter()\n                .append(\"path\")\n                .attr(\"id\", \"arc-\" + id)\n                .attr(\"class\", \"arc\")\n                .style(\"fill\", \"orange\")\n                .style(\"opacity\", 0.5);\n\n            _path\n                .attr(\"d\", arc.arc)\n                .attr(\"transform\", \"translate(\" + arc.p1[0] + \",\" + arc.p1[1] + \")\");\n\n            _line.enter()\n                .append(\"line\")\n                .attr(\"id\", \"arc-\" + id)\n                .attr(\"class\", \"arc\");\n\n            _line\n                .attr(\"x1\", function(d) { return d.p1[0]; })\n                .attr(\"y1\", function(d) { return d.p1[1]; })\n                .attr(\"x2\", function(d) { return d.p2[0]; })\n                .attr(\"y2\", function(d) { return d.p2[1]; })\n                .attr(\"stroke\", \"black\")\n                .attr(\"stroke-width\", 2);\n\n            _drag\n                .on(\"drag\", function(d, i) {\n                    let ev = event,\n                        angle = 0;\n\n                    i = i + 2;\n\n                    arc[\"p\" + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n                    arc[\"p\" + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n                    angle = i === 3 ? arcs.startAngle(id) : arcs.endAngle(id);\n\n                    if ((arc.startAngle < Math.PI && arc.endAngle < Math.PI && angle < Math.PI) ||\n                        (arc.startAngle >= Math.PI && arc.endAngle >= Math.PI && angle >= Math.PI)) {\n\n                        if (i === 2) {\n                            arc.endAngle = angle;\n                            arc.arc.endAngle(angle);\n                        } else if (i === 3) {\n                            arc.startAngle = angle;\n                            arc.arc.startAngle(angle);\n                        }\n\n                    }\n\n                    drawStrum(arc, i - 2);\n                })\n                .on(\"end\", onDragEnd());\n\n            circles.enter()\n                .append(\"circle\")\n                .attr(\"id\", \"arc-\" + id)\n                .attr(\"class\", \"arc\");\n\n            circles\n                .attr(\"cx\", function(d) { return d[0]; })\n                .attr(\"cy\", function(d) { return d[1]; })\n                .attr(\"r\", 5)\n                .style(\"opacity\", function(d, i) {\n                    return (activePoint !== undefined && i === activePoint) ? 0.8 : 0;\n                })\n                .on(\"mouseover\", function() {\n                    select(this).style(\"opacity\", 0.8);\n                })\n                .on(\"mouseout\", function() {\n                    select(this).style(\"opacity\", 0);\n                })\n                .call(_drag);\n        }\n\n        function dimensionsForPoint(p) {\n            let dims = { i: -1, left: undefined, right: undefined };\n            keys(__.dimensions).some(function(dim, i) {\n                if (xscale(dim) < p[0]) {\n                    let next = keys(__.dimensions)[pc.getOrderedDimensionKeys().indexOf(dim)+1];\n                    dims.i = i;\n                    dims.left = dim;\n                    dims.right = next;\n                    return false;\n                }\n                return true;\n            });\n\n            if (dims.left === undefined) {\n                // Event on the left side of the first axis.\n                dims.i = 0;\n                dims.left = pc.getOrderedDimensionKeys()[0];\n                dims.right = pc.getOrderedDimensionKeys()[1];\n            } else if (dims.right === undefined) {\n                // Event on the right side of the last axis\n                dims.i = keys(__.dimensions).length - 1;\n                dims.right = dims.left;\n                dims.left = pc.getOrderedDimensionKeys()[keys(__.dimensions).length - 2];\n            }\n\n            return dims;\n        }\n\n        function onDragStart() {\n            // First we need to determine between which two axes the arc was started.\n            // This will determine the freedom of movement, because a arc can\n            // logically only happen between two axes, so no movement outside these axes\n            // should be allowed.\n            return function() {\n                let p = mouse(strumRect.node()),\n                    dims,\n                    arc;\n\n                p[0] = p[0] - __.margin.left;\n                p[1] = p[1] - __.margin.top;\n\n                dims = dimensionsForPoint(p),\n                    arc = {\n                        p1: p,\n                        dims: dims,\n                        minX: xscale(dims.left),\n                        maxX: xscale(dims.right),\n                        minY: 0,\n                        maxY: h(),\n                        startAngle: undefined,\n                        endAngle: undefined,\n                        arc: d3Arc().innerRadius(0)\n                    };\n\n                arcs[dims.i] = arc;\n                arcs.active = dims.i;\n\n                // Make sure that the point is within the bounds\n                arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n                arc.p2 = arc.p1.slice();\n                arc.p3 = arc.p1.slice();\n            };\n        }\n\n        function onDrag() {\n            return function() {\n                let ev = event,\n                    arc = arcs[arcs.active];\n\n                // Make sure that the point is within the bounds\n                arc.p2[0] = Math.min(Math.max(arc.minX + 1, ev.x - __.margin.left), arc.maxX);\n                arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - __.margin.top), arc.maxY);\n                arc.p3 = arc.p2.slice();\n//      console.log(arcs.angle(arcs.active));\n//      console.log(signedAngle(arcs.unsignedAngle(arcs.active)));\n                drawStrum(arc, 1);\n            };\n        }\n\n        // some helper functions\n        function hypothenuse(a, b) {\n            return Math.sqrt(a*a + b*b);\n        }\n\n        let rad = (function() {\n            let c = Math.PI / 180;\n            return function(angle) {\n                return angle * c;\n            };\n        })();\n\n        let deg = (function() {\n            let c = 180 / Math.PI;\n            return function(angle) {\n                return angle * c;\n            };\n        })();\n\n        // [0, 2*PI] -> [-PI/2, PI/2]\n        let signedAngle = function(angle) {\n            let ret = angle;\n            if (angle > Math.PI) {\n                ret = angle - 1.5 * Math.PI;\n                ret = angle - 1.5 * Math.PI;\n            } else {\n                ret = angle - 0.5 * Math.PI;\n                ret = angle - 0.5 * Math.PI;\n            }\n            return -ret;\n        }\n\n        /**\n         * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n         * However, one can only select lines from 0 to PI, so we compute the\n         * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n         * are 12 and 6 o'clock respectively.\n         */\n        function containmentTest(arc) {\n            let startAngle = signedAngle(arc.startAngle);\n            let endAngle = signedAngle(arc.endAngle);\n\n            if (startAngle > endAngle) {\n                let tmp = startAngle;\n                startAngle = endAngle;\n                endAngle = tmp;\n            }\n\n            // test if segment angle is contained in angle interval\n            return function(a) {\n\n                if (a >= startAngle && a <= endAngle) {\n                    return true;\n                }\n\n                return false;\n            };\n        }\n\n        function selected() {\n            let ids = Object.getOwnPropertyNames(arcs),\n                brushed = __.data;\n\n            // Get the ids of the currently active arcs.\n            ids = ids.filter(function(d) {\n                return !isNaN(d);\n            });\n\n            function crossesStrum(d, id) {\n                let arc = arcs[id],\n                    test = containmentTest(arc),\n                    d1 = arc.dims.left,\n                    d2 = arc.dims.right,\n                    y1 = __.dimensions[d1].yscale,\n                    y2 = __.dimensions[d2].yscale,\n                    a = arcs.width(id),\n                    b = y1(d[d1]) - y2(d[d2]),\n                    c = hypothenuse(a, b),\n                    angle = Math.asin(b/c); // rad in [-PI/2, PI/2]\n                return test(angle);\n            }\n\n            if (ids.length === 0) { return brushed; }\n\n            return brushed.filter(function(d) {\n                switch(brush.predicate) {\n                    case \"AND\":\n                        return ids.every(function(id) { return crossesStrum(d, id); });\n                    case \"OR\":\n                        return ids.some(function(id) { return crossesStrum(d, id); });\n                    default:\n                        throw new Error(\"Unknown brush predicate \" + __.brushPredicate);\n                }\n            });\n        }\n\n        function removeStrum() {\n            let arc = arcs[arcs.active],\n                svg = pc.selection.select(\"svg\").select(\"g#arcs\");\n\n            delete arcs[arcs.active];\n            arcs.active = undefined;\n            svg.selectAll(\"line#arc-\" + arc.dims.i).remove();\n            svg.selectAll(\"circle#arc-\" + arc.dims.i).remove();\n            svg.selectAll(\"path#arc-\" + arc.dims.i).remove();\n        }\n\n        function onDragEnd() {\n            return function() {\n                let brushed = __.data,\n                    arc = arcs[arcs.active];\n\n                // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n                // considered a drag without move. So we have to deal with that case\n                if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n                    removeStrum(arcs);\n                }\n\n                if (arc) {\n                    let angle = arcs.startAngle(arcs.active);\n\n                    arc.startAngle = angle;\n                    arc.endAngle = angle;\n                    arc.arc\n                        .outerRadius(arcs.length(arcs.active))\n                        .startAngle(angle)\n                        .endAngle(angle);\n                }\n\n\n                brushed = selected(arcs);\n                arcs.active = undefined;\n                __.brushed = brushed;\n                pc.renderBrushed();\n                events.call('end', pc, __.brushed);\n            };\n        }\n\n        function brushReset(arcs) {\n            return function() {\n                let ids = Object.getOwnPropertyNames(arcs).filter(function(d) {\n                    return !isNaN(d);\n                });\n\n                ids.forEach(function(d) {\n                    arcs.active = d;\n                    removeStrum(arcs);\n                });\n                onDragEnd(arcs)();\n            };\n        }\n\n        function install() {\n            if (!g) pc.createAxes();\n\n            let _drag = drag();\n\n            // Map of current arcs. arcs are stored per segment of the PC. A segment,\n            // being the area between two axes. The left most area is indexed at 0.\n            arcs.active = undefined;\n            // Returns the width of the PC segment where currently a arc is being\n            // placed. NOTE: even though they are evenly spaced in our current\n            // implementation, we keep for when non-even spaced segments are supported as\n            // well.\n            arcs.width = function(id) {\n                let arc = arcs[id];\n\n                if (arc === undefined) {\n                    return undefined;\n                }\n\n                return arc.maxX - arc.minX;\n            };\n\n            // returns angles in [-PI/2, PI/2]\n            let angle = function(p1, p2) {\n                let a = p1[0] - p2[0],\n                    b = p1[1] - p2[1],\n                    c = hypothenuse(a, b);\n\n                return Math.asin(b/c);\n            }\n\n            // returns angles in [0, 2 * PI]\n            arcs.endAngle = function(id) {\n                let arc = arcs[id];\n                if (arc === undefined) {\n                    return undefined;\n                }\n                let sAngle = angle(arc.p1, arc.p2),\n                    uAngle = -sAngle + Math.PI / 2;\n\n                if (arc.p1[0] > arc.p2[0]) {\n                    uAngle = 2 * Math.PI - uAngle;\n                }\n\n                return uAngle;\n            }\n\n            arcs.startAngle = function(id) {\n                let arc = arcs[id];\n                if (arc === undefined) {\n                    return undefined;\n                }\n\n                let sAngle = angle(arc.p1, arc.p3),\n                    uAngle = -sAngle + Math.PI / 2;\n\n                if (arc.p1[0] > arc.p3[0]) {\n                    uAngle = 2 * Math.PI - uAngle;\n                }\n\n                return uAngle;\n            }\n\n            arcs.length = function(id) {\n                let arc = arcs[id];\n\n                if (arc === undefined) {\n                    return undefined;\n                }\n\n                let a = arc.p1[0] - arc.p2[0],\n                    b = arc.p1[1] - arc.p2[1],\n                    c = hypothenuse(a, b);\n\n                return(c);\n            }\n\n            pc.on(\"axesreorder.arcs\", function() {\n                let ids = Object.getOwnPropertyNames(arcs).filter(function(d) {\n                    return !isNaN(d);\n                });\n\n                // Checks if the first dimension is directly left of the second dimension.\n                function consecutive(first, second) {\n                    let length = keys(__.dimensions).length;\n                    return keys(__.dimensions).some(function(d, i) {\n                        return (d === first)\n                            ? i + i < length && __.dimensions[i + 1] === second\n                            : false;\n                    });\n                }\n\n                if (ids.length > 0) { // We have some arcs, which might need to be removed.\n                    ids.forEach(function(d) {\n                        let dims = arcs[d].dims;\n                        arcs.active = d;\n                        // If the two dimensions of the current arc are not next to each other\n                        // any more, than we'll need to remove the arc. Otherwise we keep it.\n                        if (!consecutive(dims.left, dims.right)) {\n                            removeStrum(arcs);\n                        }\n                    });\n                    onDragEnd(arcs)();\n                }\n            });\n\n            // Add a new svg group in which we draw the arcs.\n            pc.selection.select(\"svg\").append(\"g\")\n                .attr(\"id\", \"arcs\")\n                .attr(\"transform\", \"translate(\" + __.margin.left + \",\" + __.margin.top + \")\");\n\n            // Install the required brushReset function\n            pc.brushReset = brushReset(arcs);\n\n            _drag\n                .on(\"start\", onDragStart(arcs))\n                .on(\"drag\", onDrag(arcs))\n                .on(\"end\", onDragEnd(arcs));\n\n            // NOTE: The styling needs to be done here and not in the css. This is because\n            //       for 1D brushing, the canvas layers should not listen to\n            //       pointer-events._.\n            strumRect = pc.selection.select(\"svg\").insert(\"rect\", \"g#arcs\")\n                .attr(\"id\", \"arc-events\")\n                .attr(\"x\", __.margin.left)\n                .attr(\"y\", __.margin.top)\n                .attr(\"width\", w())\n                .attr(\"height\", h() + 2)\n                .style(\"opacity\", 0)\n                .call(_drag);\n        }\n\n        brush.modes[\"angular\"] = {\n            install: install,\n            uninstall: function() {\n                pc.selection.select(\"svg\").select(\"g#arcs\").remove();\n                pc.selection.select(\"svg\").select(\"rect#arc-events\").remove();\n                pc.on(\"axesreorder.arcs\", undefined);\n                delete pc.brushReset;\n\n                strumRect = undefined;\n            },\n            selected: selected,\n            brushState: function () { return arcs; }\n        };\n\n    };\n\n    pc.interactive = function() {\n        flags.interactive = true;\n        return this;\n    };\n\n// expose a few objects\n    pc.xscale = xscale;\n    pc.ctx = ctx;\n    pc.canvas = canvas;\n    pc.g = function() { return g; };\n\n// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\n    pc.resize = function(word) {\n        resize.call(\"resize\", this, __.width, __.height, __.margin);\n        return this;\n    };\n\n// highlight an array of data\n    pc.highlight = function(data) {\n        if (arguments.length === 0) {\n            return __.highlighted;\n        }\n\n        __.highlighted = data;\n        pc.clear(\"highlight\");\n        selectAll([canvas.foreground, canvas.brushed]).classed(\"faded\", true);\n        data.forEach(path_highlight);\n        events.call('highlight', this, data);\n        return this;\n    };\n\n// clear highlighting\n    pc.unhighlight = function() {\n        __.highlighted = [];\n        pc.clear(\"highlight\");\n        selectAll([canvas.foreground, canvas.brushed]).classed(\"faded\", false);\n        return this;\n    };\n\n// calculate 2d intersection of line a->b with line c->d\n// points are objects with x and y properties\n    pc.intersection =  function(a, b, c, d) {\n        return {\n            x: ((a.x * b.y - a.y * b.x) * (c.x - d.x) - (a.x - b.x) * (c.x * d.y - c.y * d.x)) / ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n            y: ((a.x * b.y - a.y * b.x) * (c.y - d.y) - (a.y - b.y) * (c.x * d.y - c.y * d.x)) / ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x))\n        };\n    };\n\n    function position(d) {\n        if (xscale.range().length === 0) {\n            xscale.rangePoints([0, w()], 1);\n        }\n        let v = dragging[d];\n        return v == null ? xscale(d) : v;\n    }\n\n// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n// (so you can choose to save it to disk, etc.)\n    pc.mergeParcoords = function(callback) {\n        // Retina display, etc.\n        let devicePixelRatio = window.devicePixelRatio || 1;\n\n        // Create a canvas element to store the merged canvases\n        let mergedCanvas = document.createElement(\"canvas\");\n        mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio\n        mergedCanvas.height = (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n        mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + \"px\";\n        mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + \"px\";\n\n        // Give the canvas a white background\n        let context = mergedCanvas.getContext(\"2d\");\n        context.fillStyle = \"#ffffff\";\n        context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n        // Merge all the canvases\n        for (let key in pc.canvas) {\n            context.drawImage(pc.canvas[key], 0, 24 * devicePixelRatio, mergedCanvas.width, mergedCanvas.height - 30 * devicePixelRatio);\n        }\n\n        // Add SVG elements to canvas\n        let DOMURL = window.URL || window.webkitURL || window;\n        let serializer = new XMLSerializer();\n        let svgStr = serializer.serializeToString(pc.selection.select(\"svg\").node());\n\n        // Create a Data URI.\n        let src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n        let img = new Image();\n        img.onload = function () {\n            context.drawImage(img, 0, 0, img.width * devicePixelRatio, img.height * devicePixelRatio);\n            if (typeof callback === \"function\") {\n                callback(mergedCanvas);\n            }\n        };\n        img.src = src;\n    }\n\n    install1DAxes();\n    install2DStrums();\n    installAngularBrush();\n\n    pc.version = \"0.7.0\";\n    // this descriptive text should live with other introspective methods\n    pc.toString = function() { return \"Parallel Coordinates: \" + keys(__.dimensions).length + \" dimensions (\" + keys(__.data[0]).length + \" total) , \" + __.data.length + \" rows\"; };\n\n    return pc;\n};\n\n\n\nexport default ParCoords;"],"sourceRoot":".."}