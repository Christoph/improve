{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/navbar.ts","src/charts/dynamic-bar-chart.ts","src/charts/line-chart.ts","src/charts/parallel-coordinates.ts","src/empty/no-selection.ts","src/resources/index.ts","src/vis/vis.ts","src/vpsa/vpsa.ts","src/resources/elements/loading-indicator.ts","src/resources/sources/local-loader.ts","src/charts/parallel-coordinates0.ts","src/charts/parallel-coordinates-vertical.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from \"aurelia-router\"\n\nexport class App {\n  router = Router;\n\n  configureRouter(config: RouterConfiguration, router) {\n      config.title = \"Improve\";\n      config.map([\n          { route: \"\", moduleId: \"empty/no-selection\", nav: true, title: \"Select\" },\n        //   { route: \"vis/\", moduleId: \"vis/vis\", nav: true, title: \"Vis\", name: \"vis\" },\n          { route: \"vpsa/\", moduleId: \"vpsa/vpsa\", nav: true, title: \"SIR\", name: \"vpsa\" }\n      ]);\n\n      this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(\"aurelia-computed\")\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class NavBar {\n  @bindable router = null;\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class DynamicBarChart {\n  // One-Way\n  @bindable margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  @bindable x_size = 900;\n  @bindable y_size = 500;\n  @bindable x_attribute = \"salesperson\";\n  @bindable y_attribute = \"sales\";\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) mo;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private svg;\n  private tooltip;\n  private x;\n  private y;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n      if (this.data) {\n        // subscribe to the data array and watch for changes\n        this.subscription = this.bindingEngine\n          .collectionObserver(this.data)\n          .subscribe(splices => this.dataMutated(splices));\n      }\n\n      // set the dimensions and margins of the graph\n      this.width = this.x_size - this.margin.left - this.margin.right;\n      this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n      this.initChart()\n      this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    this.updateChart();\n  }\n\n  unbind() {\n    this.subscription.dispose();\n  }\n\n  initChart() {\n    // append the svg object to the chart div of the page\n    // append a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x = d3.scaleBand()\n      .range([0, this.width])\n      .padding(0.1);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n\n    // add the x Axis\n    this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // add the y Axis\n    this.svg.append(\"g\")\n      .attr(\"class\", \"yAxis\");\n\n    // create tooltip\n    this.tooltip = d3.select(this.element).append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n  }\n\n  updateChart() {\n    // Update domains\n    this.x.domain(this.data.map((d) => d[this.x_attribute]));\n    this.y.domain([0, d3.max<any, any>(this.data, (d) => d[this.y_attribute])]);\n\n    // Select chart\n    let chart = this.svg.selectAll(\".bar\")\n      .data(this.data)\n\n    // Update axis\n    this.svg.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.svg.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    // Add and update bars\n    chart.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .on(\"mouseover\", (d) => {\n        this.mo = d[this.x_attribute];\n\n        this.tooltip.transition()\n          .duration(100)\n          .style(\"opacity\", .9);\n        this.tooltip.html(d[this.x_attribute])\n          .style(\"left\", (this.x(d[this.x_attribute]) + this.x.bandwidth() / 2) + \"px\")\n          .style(\"top\", (this.y(d[this.y_attribute]) + 60) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        this.tooltip.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .merge(chart)\n      .attr(\"width\", this.x.bandwidth())\n      .attr(\"x\", (d) => this.x(d[this.x_attribute]))\n      .transition()\n      .attr(\"y\", (d) => this.y(d[this.y_attribute]))\n      .attr(\"height\", (d) => this.height - this.y(d[this.y_attribute]));\n\n    // Remove bars\n    chart.exit().remove();\n  }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class LineChart {\n  // One-Way\n  @bindable margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  @bindable x_size = 900;\n  @bindable y_size = 500;\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) mo;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private svg;\n  private tooltip;\n  private x;\n  private y;\n  private valueline;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n      if (this.data) {\n        // subscribe to the data array and watch for changes\n        this.subscription = this.bindingEngine\n          .collectionObserver(this.data)\n          .subscribe(splices => this.dataMutated(splices));\n      }\n\n      // set the dimensions and margins of the graph\n      this.width = this.x_size - this.margin.left - this.margin.right;\n      this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n      this.initChart()\n      this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    this.updateChart();\n  }\n\n  unbind() {\n    this.subscription.dispose();\n  }\n\n  initChart() {\n    // append the svg object to the chart div of the page\n    // append a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x = d3.scaleLinear()\n      .range([0, this.width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n\n    // add the x Axis\n    this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // add the y Axis\n    this.svg.append(\"g\")\n      .attr(\"class\", \"yAxis\");\n\n    // define the line\n    this.valueline = d3.line()\n        .x((d) => this.x(d[this.x_attribute]))\n        .y((d) => this.y(d[this.y_attribute]));\n\n    // create tooltip\n    // this.tooltip = d3.select(this.element).append(\"div\")\n    //   .attr(\"class\", \"tooltip\")\n    //   .style(\"opacity\", 0);\n  }\n\n  updateChart() {\n    // Update domains\n    let x_max = d3.max(this.data, (array) => d3.max<any, any>(array, (d) => d[this.x_attribute]))\n    let y_max = d3.max(this.data, (array) => d3.max<any, any>(array, (d) => d[this.y_attribute]))\n    \n    this.x.domain([0, x_max]);\n    this.y.domain([0, y_max]);\n\n    // Select chart\n    let chart = this.svg.selectAll(\".svg\")\n      .data(this.data)\n\n    // Update axis\n    this.svg.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.svg.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    // Add and update bars\n    chart.enter()\n      .append(\"path\")\n      .attr(\"class\", \"line\")\n    //   .on(\"mouseover\", (d) => {\n    //     this.mo = d[this.x_attribute];\n      //\n    //     this.tooltip.transition()\n    //       .duration(100)\n    //       .style(\"opacity\", .9);\n    //     this.tooltip.html(d[this.x_attribute])\n    //       .style(\"left\", (this.x(d[this.x_attribute]) + this.x.bandwidth() / 2) + \"px\")\n    //       .style(\"top\", (this.y(d[this.y_attribute]) + 60) + \"px\");\n    //   })\n    //   .on(\"mouseout\", (d) => {\n    //     this.tooltip.transition()\n    //       .duration(500)\n    //       .style(\"opacity\", 0);\n    //   })\n      .merge(chart)\n      .attr(\"d\", (d) => this.valueline(d));\n\n    // Remove bars\n    chart.exit().remove();\n  }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\ndeclare var ParCoords: any;\n\n@inject(Element, BindingEngine)\n@noView()\nexport class parallelCoordinates {\n    // One-Way\n    @bindable margin = { top: 20, right: 20, bottom: 30, left: 40 };\n    @bindable x_size = 900;\n    @bindable y_size = 500;\n    @bindable x_attribute = \"x\";\n    @bindable y_attribute = \"y\";\n\n    // Two-Way\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing = new Map();\n\n    // Observed Variables\n    @bindable data = [];\n\n    // Aurelia variables\n    private element;\n    private subscription;\n\n    // D3 variables\n    private svg;\n    private x;\n    private y = {};\n    private dimensions;\n    private line;\n    private axis;\n    private background;\n    private foreground;\n\n    // set the dimensions and margins of the graph\n    private width;\n    private height;\n\n    constructor(element, private bindingEngine) {\n        this.element = element;\n    }\n\n    // This is called after binding attributes\n    attached() {\n        if (this.data) {\n            // subscribe to the data array and watch for changes\n            this.subscription = this.bindingEngine\n                .collectionObserver(this.data)\n                .subscribe(splices => this.dataMutated(splices));\n        }\n\n        // set the dimensions and margins of the graph\n        this.width = this.x_size - this.margin.left - this.margin.right;\n        this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n        // Draw the graph\n        this.initChart()\n        this.updateChart();\n    }\n\n    // Update the chart if the data changes\n    dataMutated(splices) {\n        this.updateChart();\n    }\n\n    // Remove the watcher after disposing the class\n    unbind() {\n        this.subscription.dispose();\n    }\n\n    // D3 functions\n\n    // Draw the lines\n    private path(d) {\n        return this.line(this.dimensions.map((p) => {\n            return [this.x(p), this.y[p](d[p])]; }));\n    }\n\n    // Display active lines\n    private brushHighlight(g, y, foreground) {\n        let actives = [];\n        let extents = [];\n\n        // Find out what is within the brushes\n        g.selectAll(\".brush\")\n          .filter(function(d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(d) {\n            actives.push(d)\n            extents.push([y[d].invert(d3.brushSelection(this)[1]), y[d].invert(d3.brushSelection(this)[0])])\n          });\n\n          // Bring brushed lines into foreground\n          foreground.style(\"display\", function(d) {\n              return actives.every(function(p, i) {\n                return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n              }) ? null : \"none\";\n          });\n    }\n\n    // Update external variables with current brushes\n    private getBrushing(g, y, brushing) {\n        g.selectAll(\".brush\")\n          .filter(function(d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(d) {\n            brushing.set(d, [y[d].invert(d3.brushSelection(this)[1]), y[d].invert(d3.brushSelection(this)[0])])\n          });\n    }\n\n    initChart() {\n        // append the svg object to the chart div of the page\n        // append a 'group' element to 'svg'\n        // moves the 'group' element to the top left margin\n        this.svg = d3.select(this.element)\n            .append(\"svg\")\n            .attr(\"width\", this.width + this.margin.left + this.margin.right)\n            .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n            \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n        // set the x range\n        this.x = d3.scalePoint()\n            .range([0, this.width]);\n\n        // Basic initialization\n        this.axis = d3.axisLeft()\n        this.line = d3.line()\n        .curve(d3.curveMonotoneY);\n    }\n\n    updateChart() {\n        // Get current dataset dimensions: Keys of the map\n        this.dimensions = d3.keys(this.data[0]).filter((d) => {\n            return d != \"name\"\n        });\n\n        // Create corresponding y axis\n        // Currently only linear values\n        this.dimensions.map((dim) => {\n            this.y[dim] = d3.scaleLinear()\n                    .range([this.height, 0])\n                    .domain(d3.extent(this.data, (data) => {\n                        return data[dim];\n                    }))\n        });\n\n        // Create the x axis\n        this.x.domain(this.dimensions);\n\n        // Add grey background lines for context.\n        this.background = this.svg.append(\"g\")\n            .attr(\"class\", \"background\")\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"d\", (d) => { return this.path(d)});\n\n        // Add blue foreground lines for focus.\n        this.foreground = this.svg.append(\"g\")\n            .attr(\"class\", \"foreground\")\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"d\", (d) => { return this.path(d)});\n\n        // Create local versions of class variables\n        // This is necessary due to the nature of TS and D3\n        let height = this.height;\n        let x = this.x;\n        let y = this.y;\n        let axis = this.axis;\n        let foreground = this.foreground;\n        let brushHighlight = this.brushHighlight;\n        let getBrushing = this.getBrushing;\n        let brushing = this.brushing;\n\n        // Create drawing area\n        let g = this.svg.selectAll(\".dimension\")\n            .data(this.dimensions)\n          .enter().append(\"g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", (d) => {\n                return \"translate(\" + x(d) + \")\"; });\n\n        // Add axis\n        g.append(\"g\")\n            .each(function(d) {\n                 d3.select(this).call(axis.scale(y[d])););\n\n        // Add tiltes for the axis\n        g.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", -9)\n            .text((d) => { return d; });\n\n        // Add and store a brush for each axis.\n        g.append(\"g\")\n            .attr(\"class\", \"brush\")\n            // This part is very important!\n            // function(d) is used instead of (d) =>\n            // The reason is that within function(d) this is the element\n            // and this within (d) => is the TS class which means you need a local version of class variables\n            // for everything used within function(d)\n            .each(function(d) {\n                 d3.select(this).call(d3.brushY()\n                .extent([[-9,0], [9, height]])\n                 .on(\"start\", (d, i) => {\n                     d3.event.sourceEvent.stopPropagation();\n                 })\n                 .on(\"brush\", (d, i) => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n\n                    brushHighlight(g, y, foreground)\n                })\n                .on(\"end\", (d, i) => {\n                    // Check if brush was removed\n                    if (d3.brushSelection(this) == null) {\n                        brushHighlight(g, y, foreground)\n\n                        brushing.delete(d)\n                    }\n\n                    getBrushing(g, y, brushing)\n                })\n            ));\n            }\n        }\n    }\n}\n","export class NoSelection {\n    message = \"No Route Selected\"\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([\n      './elements/loading-indicator'\n  ]);\n}\n","export class Vis {\n    test = \"Vis!\"\n\n    data = [\n        {\"salesperson\" : \"Bob\", \"sales\": 12},\n        {\"salesperson\" : \"Robin\", \"sales\": 1},\n        {\"salesperson\" : \"Anne\", \"sales\": 8},\n        {\"salesperson\" : \"Chris\", \"sales\": 5}\n    ]\n\n    add() {\n        this.data.push({\"salesperson\" : \"Test\", \"sales\": 20});\n    }\n}\n","import {autoinject} from 'aurelia-framework';\n\n// This magic line removed the error messages for numeric\ndeclare var numeric: any;\ndeclare var ParCoords: any;\n\n@autoinject\nexport class Vspa {\n    // VPSA\n    param1 = 1;\n    param2 = 1;\n\n\n    outer_element = this.parcoord;\n\n    // SIR Model\n    TS = 1.0\n    ND = 60*365\n\n    S0 = 0.1\n    I0 = 1e-4\n    R0 = 1 - this.S0 - this.I0\n\n    // Mortality probabilty, I dies before natural death or recovery\n    rho = 0.5\n    // Per captia death rate  from natural causes\n    v = 1/(70*365.0)\n    // Population birth rate\n    mu = 1/(70*365.0)\n    // Transmission rate: I -> S. Includes encounter and transmission rate\n    beta=520/365.0\n    // Recovery rate\n    gamma=1/7.0\n\n    INPUT = [this.S0, this.I0, this.R0]\n\n    data = <any[]> []\n\n    cars = [\n        {\"name\": \"A\",\"economy (mpg)\": 1,\"cylinders\": 1,\"year\": 1},\n        {\"name\": \"A\",\"economy (mpg)\": 2,\"cylinders\": 2,\"year\": 2},\n        {\"name\": \"B\",\"economy (mpg)\": 1,\"cylinders\": 2,\"year\": 3},\n        {\"name\": \"C\",\"economy (mpg)\": 4,\"cylinders\": 2,\"year\": 1}\n    ]\n\n    private SIR = (t, INP) => {\n    \tlet Y = [0, 0 ,0]\n    \tlet V = INP\n\n        Y[0] = this.v - this.beta * V[0] * V[1] / V.reduce((a,b) => a + b, 0) - this.mu * V[0]\n    \tY[1] = this.beta * V[0] * V[1] / V.reduce((a,b) => a + b, 0) - (this.gamma + this.mu) * V[1]/(1-this.rho)\n    \tY[2] = this.gamma * V[1] - this.mu * V[2]\n\n    \treturn Y\n    }\n\n    cartesian(arg) {\n        let r = <any[]> [];\n        // let arg = arguments;\n        let max = arg.length-1;\n\n        function helper(arr, i) {\n            for (var j=0, l=arg[i].length; j<l; j++) {\n                var a = arr.slice(0); // clone arr\n                a.push(arg[i][j]);\n                if (i==max)\n                    r.push(a);\n                else\n                    helper(a, i+1);\n            }\n        }\n        helper([], 0);\n        return r;\n    }\n\n    get_params() {\n        let params = <any[]> []\n\n        // Mortality probabilty, I dies before natural death or recovery\n        // let rho = [0.3, 0.4, 0.5, 0.6, 0.7]\n        let rho = [0.4, 0.5, 0.6]\n        // Per captia death rate  from natural causes\n        let v = [1/(70*365.0), 1/(80*365.0), 1/(90*365.0)]\n        // Population birth rate\n        let mu = [1/(70*365.0), 1/(80*365.0), 1/(90*365.0)]\n        // Transmission rate: I -> S. Includes encounter and transmission rate\n        // let beta = [200/365.0, 365/365.0, 520/365.0]\n        let beta = [365/365.0, 520/365.0]\n        // Recovery rate\n        // let gamma = [1/6.0, 1/7.0, 1/8.0]\n        let gamma = [1/6.0, 1/7.0]\n\n        return this.cartesian([rho, v, mu, beta, gamma])\n    }\n\n    vspa() {\n\n        // let parcoords = ParCoords()(\"#parallel\")\n        //   .alpha(0.4)\n        //   .data([\n        //     [0,-0,0,0,0,1],\n        //     [1,-1,1,2,1,1],\n        //     [2,-2,4,4,0.5,1],\n        //     [3,-3,9,6,0.33,1],\n        //     [4,-4,16,8,0.25,1]\n        //     ])\n        //     .render()\n        //     .reorderable()\n        //     .brushMode(\"1D-axes\")\n        //     .on(\"highlight\", (d) => {\n        //         console.log(d)\n        //     });\n\n        let params = this.get_params()\n\n        params.forEach( (d) => {\n            this.rho = d[0];\n            this.v = d[1];\n            this.mu = d[2];\n            this.beta = d[3];\n            this.gamma = d[4];\n\n            let sol = numeric.dopri(0, this.ND, this.INPUT, this.SIR, 1e-6, 1000);\n\n            let temp = <any[]> []\n            for (let i = 0; i < sol.x.length; i++) {\n                temp.push({\n                    \"x\": sol.x[i],\n                    \"sus\": sol.y[i][0],\n                    \"inf\": sol.y[i][1],\n                    \"rec\": sol.y[i][2],\n                    \"pop\": sol.y[i][0] + sol.y[i][1] + sol.y[i][2]\n                })\n            }\n\n            this.data.push(temp)\n        })\n    }\n}\n","\nimport * as nprogress from 'nprogress';\nimport {bindable, noView} from 'aurelia-framework';\n\n@noView(['nprogress/nprogress.css'])\nexport class LoadingIndicator {\n@bindable loading = false;\n\nloadingChanged(newValue) {\nif (newValue) {\n  nprogress.start();\n} else {\n  nprogress.done();\n}\n}\n}\n","import {inject, noView} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\n\n\n@inject(HttpClient)\n@noView()\nexport class LocalLoader {\n    private client;\n    public data;\n\n    constructor(http) {\n        this.client =  http;\n\n        this.client.configure(config => {\n            config\n                .withBaseUrl('data/')\n                .withDefaults({\n                  credentials: 'same-origin',\n                  headers: {\n                    'Accept': 'application/json',\n                    'X-Requested-With': 'Fetch'\n                  }\n                });\n        });\n    }\n\n    load_file(filename) {\n        this.client.fetch(filename)\n          .then(response => response.json())\n          .then(data => this.data = data);\n    }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\ndeclare var ParCoords: any;\n\n@inject(Element, BindingEngine)\n@noView()\nexport class parallelCoordinates {\n    // One-Way\n    @bindable margin = { top: 20, right: 20, bottom: 30, left: 40 };\n    @bindable x_size = 900;\n    @bindable y_size = 500;\n    @bindable x_attribute = \"x\";\n    @bindable y_attribute = \"y\";\n\n    // Two-Way\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing = new Map();\n\n    // Observed Variables\n    @bindable data = [];\n\n    // Aurelia variables\n    private element;\n    private subscription;\n\n    // D3 variables\n    private svg;\n    private x;\n    private y = {};\n    private dimensions;\n    private line;\n    private axis;\n    private background;\n    private foreground;\n\n    // set the dimensions and margins of the graph\n    private width;\n    private height;\n\n    constructor(element, private bindingEngine) {\n        this.element = element;\n    }\n\n    // This is called after binding attributes\n    attached() {\n        if (this.data) {\n            // subscribe to the data array and watch for changes\n            this.subscription = this.bindingEngine\n                .collectionObserver(this.data)\n                .subscribe(splices => this.dataMutated(splices));\n        }\n\n        // set the dimensions and margins of the graph\n        this.width = this.x_size - this.margin.left - this.margin.right;\n        this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n        // Draw the graph\n        this.initChart()\n        this.updateChart();\n    }\n\n    // Update the chart if the data changes\n    dataMutated(splices) {\n        this.updateChart();\n    }\n\n    // Remove the watcher after disposing the class\n    unbind() {\n        this.subscription.dispose();\n    }\n\n    // D3 functions\n\n    // Draw the lines\n    private path(d) {\n        return this.line(this.dimensions.map((p) => {\n            return [this.x(p), this.y[p](d[p])]; }));\n    }\n\n    // Display active lines\n    private brushHighlight(g, y, foreground) {\n        let actives = [];\n        let extents = [];\n\n        // Find out what is within the brushes\n        g.selectAll(\".brush\")\n          .filter(function(d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(d) {\n            actives.push(d)\n            extents.push([y[d].invert(d3.brushSelection(this)[1]), y[d].invert(d3.brushSelection(this)[0])])\n          });\n\n          // Bring brushed lines into foreground\n          foreground.style(\"display\", function(d) {\n              return actives.every(function(p, i) {\n                return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n              }) ? null : \"none\";\n          });\n    }\n\n    // Update external variables with current brushes\n    private getBrushing(g, y, brushing) {\n        g.selectAll(\".brush\")\n          .filter(function(d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(d) {\n            brushing.set(d, [y[d].invert(d3.brushSelection(this)[1]), y[d].invert(d3.brushSelection(this)[0])])\n          });\n    }\n\n    initChart() {\n        // append the svg object to the chart div of the page\n        // append a 'group' element to 'svg'\n        // moves the 'group' element to the top left margin\n        this.svg = d3.select(this.element)\n            .append(\"svg\")\n            .attr(\"width\", this.width + this.margin.left + this.margin.right)\n            .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n            \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n        // set the x range\n        this.x = d3.scalePoint()\n            .range([0, this.width]);\n\n        // Basic initialization\n        this.axis = d3.axisLeft()\n        this.line = d3.line();\n    }\n\n    updateChart() {\n        // Get current dataset dimensions: Keys of the map\n        this.dimensions = d3.keys(this.data[0]).filter((d) => {\n            return d != \"name\"\n        });\n\n        // Create corresponding y axis\n        // Currently only linear values\n        this.dimensions.map((dim) => {\n            this.y[dim] = d3.scaleLinear()\n                    .range([this.height, 0])\n                    .domain(d3.extent(this.data, (data) => {\n                        return data[dim];\n                    }))\n        });\n\n        // Create the x axis\n        this.x.domain(this.dimensions);\n\n        // Add grey background lines for context.\n        this.background = this.svg.append(\"g\")\n            .attr(\"class\", \"background\")\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"d\", (d) => { return this.path(d)});\n\n        // Add blue foreground lines for focus.\n        this.foreground = this.svg.append(\"g\")\n            .attr(\"class\", \"foreground\")\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"d\", (d) => { return this.path(d)});\n\n        // Create local versions of class variables\n        // This is necessary due to the nature of TS and D3\n        let height = this.height;\n        let x = this.x;\n        let y = this.y;\n        let axis = this.axis;\n        let foreground = this.foreground;\n        let brushHighlight = this.brushHighlight;\n        let getBrushing = this.getBrushing;\n        let brushing = this.brushing;\n\n        // Create drawing area\n        let g = this.svg.selectAll(\".dimension\")\n            .data(this.dimensions)\n          .enter().append(\"g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", (d) => {\n                return \"translate(\" + x(d) + \")\"; });\n\n        // Add axis\n        g.append(\"g\")\n            .each(function(d) {\n                 d3.select(this).call(axis.scale(y[d])););\n\n        // Add tiltes for the axis\n        g.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", -9)\n            .text((d) => { return d; });\n\n        // Add and store a brush for each axis.\n        g.append(\"g\")\n            .attr(\"class\", \"brush\")\n            // This part is very important!\n            // function(d) is used instead of (d) =>\n            // The reason is that within function(d) this is the element\n            // and this within (d) => is the TS class which means you need a local version of class variables\n            // for everything used within function(d)\n            .each(function(d) {\n                 d3.select(this).call(d3.brushY()\n                .extent([[-9,0], [9, height]])\n                 .on(\"start\", (d, i) => {\n                     d3.event.sourceEvent.stopPropagation();\n                 })\n                 .on(\"brush\", (d, i) => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n\n                    brushHighlight(g, y, foreground)\n                })\n                .on(\"end\", (d, i) => {\n                    // Check if brush was removed\n                    if (d3.brushSelection(this) == null) {\n                        brushHighlight(g, y, foreground)\n\n                        brushing.delete(d)\n                    }\n\n                    getBrushing(g, y, brushing)\n                })\n            ));\n            }\n        }\n    }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\ndeclare var ParCoords: any;\n\n@inject(Element, BindingEngine)\n@noView()\nexport class parallelCoordinatesVertical {\n    // One-Way\n    @bindable margin = { top: 60, right: 20, bottom: 30, left: 40 };\n\n    // Two-Way\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing = new Map();\n\n    // Observed Variables\n    @bindable data = [];\n\n    // Aurelia variables\n    private element;\n    private subscription;\n\n    // D3 variables\n    private svg;\n    private x = {};\n    private y;\n    private dimensions;\n    private line;\n    private axis;\n    private background;\n    private foreground;\n\n    // set the dimensions and margins of the graph\n    private x_size = 500;\n    private y_size = 500;\n    private width;\n    private height;\n\n    constructor(element, private bindingEngine) {\n        this.element = element;\n    }\n\n    // This is called after binding attributes\n    attached() {\n        if (this.data) {\n            // subscribe to the data array and watch for changes\n            this.subscription = this.bindingEngine\n                .collectionObserver(this.data)\n                .subscribe(splices => this.dataMutated(splices));\n        }\n\n        // set the dimensions and margins of the graph\n        this.x_size = this.element.parentElement.offsetWidth\n        this.y_size = this.element.parentElement.offsetHeight\n\n        this.width = this.x_size - this.margin.left - this.margin.right;\n        this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n        // Draw the graph\n        this.initChart()\n        this.updateChart();\n    }\n\n    // Update the chart if the data changes\n    dataMutated(splices) {\n        this.updateChart();\n    }\n\n    // Remove the watcher after disposing the class\n    unbind() {\n        this.subscription.dispose();\n    }\n\n    // D3 functions\n\n    // Draw the lines\n    private path(d) {\n        return this.line(this.dimensions.map((p) => {\n            return [this.x[p](d[p]), this.y(p)]; }));\n    }\n\n    // Display active lines\n    private brushHighlight(g, x, foreground) {\n        let actives = [];\n        let extents = [];\n\n        // Find out what is within the brushes\n        g.selectAll(\".brush\")\n          .filter(function(d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(d) {\n            actives.push(d)\n            extents.push([x[d].invert(d3.brushSelection(this)[1]), x[d].invert(d3.brushSelection(this)[0])])\n          });\n\n          // Bring brushed lines into foreground\n          foreground.style(\"display\", function(d) {\n              return actives.every(function(p, i) {\n                return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n              }) ? null : \"none\";\n          });\n    }\n\n    // Update external variables with current brushes\n    private getBrushing(g, x, brushing) {\n        g.selectAll(\".brush\")\n          .filter(function(d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(d) {\n            brushing.set(d, [x[d].invert(d3.brushSelection(this)[1]), x[d].invert(d3.brushSelection(this)[0])])\n          });\n    }\n\n    initChart() {\n        // append the svg object to the chart div of the page\n        // append a 'group' element to 'svg'\n        // moves the 'group' element to the top left margin\n        this.svg = d3.select(this.element)\n            .append(\"svg\")\n            .attr(\"width\", this.width + this.margin.left + this.margin.right)\n            .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n            \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n        // set the x range\n        this.y = d3.scalePoint()\n            .range([0, this.height]);\n\n        // Basic initialization\n        this.axis = d3.axisTop();\n        this.line = d3.line()\n        .curve(d3.curveMonotoneY);\n    }\n\n    updateChart() {\n        // Get current dataset dimensions: Keys of the map\n        this.dimensions = d3.keys(this.data[0]).filter((d) => {\n            return d != \"name\"\n        });\n\n        // Create corresponding y axis\n        // Currently only linear values\n        this.dimensions.map((dim) => {\n            this.x[dim] = d3.scaleLinear()\n                    .range([this.width, 0])\n                    .domain(d3.extent(this.data, (data) => {\n                        return data[dim];\n                    }))\n        });\n\n        // Create the x axis\n        this.y.domain(this.dimensions);\n\n        // Add grey background lines for context.\n        this.background = this.svg.append(\"g\")\n            .attr(\"class\", \"background\")\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"d\", (d) => { return this.path(d)});\n\n        // Add blue foreground lines for focus.\n        this.foreground = this.svg.append(\"g\")\n            .attr(\"class\", \"foreground\")\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"d\", (d) => { return this.path(d)});\n\n        // Create local versions of class variables\n        // This is necessary due to the nature of TS and D3\n        let height = this.height;\n        let width = this.width;\n        let x = this.x;\n        let y = this.y;\n        let axis = this.axis;\n        let foreground = this.foreground;\n        let brushHighlight = this.brushHighlight;\n        let getBrushing = this.getBrushing;\n        let brushing = this.brushing;\n\n        // Create drawing area\n        let g = this.svg.selectAll(\".dimension\")\n            .data(this.dimensions)\n          .enter().append(\"g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", (d) => {\n                return \"translate(0,\" + y(d) + \")\"; });\n\n        // Add axis\n        g.append(\"g\")\n            .each(function(d) {\n                 d3.select(this).call(axis.scale(x[d])););\n\n        // Add tiltes for the axis\n        g.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", -9)\n            .attr(\"transform\", \"rotate(-90)\")\n            .text((d) => { return d; });\n\n        // Add and store a brush for each axis.\n        g.append(\"g\")\n            .attr(\"class\", \"brush\")\n            // This part is very important!\n            // function(d) is used instead of (d) =>\n            // The reason is that within function(d) this is the element\n            // and this within (d) => is the TS class which means you need a local version of class variables\n            // for everything used within function(d)\n            .each(function(d) {\n                 d3.select(this).call(d3.brushX()\n                .extent([[0, -9], [width, 9]])\n                 .on(\"start\", (d, i) => {\n                     d3.event.sourceEvent.stopPropagation();\n                 })\n                 .on(\"brush\", (d, i) => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n\n                    brushHighlight(g, x, foreground)\n                })\n                .on(\"end\", (d, i) => {\n                    // Check if brush was removed\n                    if (d3.brushSelection(this) == null) {\n                        brushHighlight(g, x, foreground)\n\n                        brushing.delete(d)\n                    }\n\n                    getBrushing(g, x, brushing)\n                })\n            ));\n            }\n        }\n    }\n}\n"],"sourceRoot":".."}