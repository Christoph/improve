{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/navbar.ts","src/charts/line-chart-focus.ts","src/charts/parallel-coordinates-vertical.ts","src/vpsa/vpsa.ts","src/empty/no-selection.ts","src/resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from \"aurelia-router\"\n\nexport class App {\n  router = Router;\n\n  configureRouter(config: RouterConfiguration, router) {\n      config.title = \"Improve\";\n      config.map([\n          { route: \"\", moduleId: \"empty/no-selection\", nav: true, title: \"Select\" },\n        //   { route: \"vis/\", moduleId: \"vis/vis\", nav: true, title: \"Vis\", name: \"vis\" },\n          { route: \"vpsa/\", moduleId: \"vpsa/vpsa\", nav: true, title: \"SIR\", name: \"vpsa\" }\n      ]);\n\n      this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(\"aurelia-computed\")\n    .plugin(\"d3-extended\")\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class NavBar {\n  @bindable router = null;\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class LineChartFocus {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private svg;\n  private linechart;\n  private focus;\n  private x;\n  private y;\n  private focus_x;\n  private valueline;\n  private histogram;\n  private brush;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n  private lc_width = 50;\n  private lc_height = 500;\n  private focus_width = 50;\n  private focus_height = 500;\n  private focus_offset = 100;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n      if (this.data) {\n        // subscribe to the data array and watch for changes\n        this.subscription = this.bindingEngine\n          .collectionObserver(this.data)\n          .subscribe(splices => this.dataMutated(splices));\n        }\n\n      // set the dimensions and margins of the graph\n      this.x_size = this.element.parentElement.offsetWidth;\n      this.y_size = this.element.parentElement.offsetHeight;\n\n      this.width = this.x_size - this.margin.left - this.margin.right;\n      this.lc_width = this.width * 0.8;\n      this.focus_width = this.width * 0.2 - this.margin.left;\n\n      this.height = this.y_size - this.margin.top - this.margin.bottom;\n      this.lc_height = this.y_size - this.margin.top - this.margin.bottom;\n      this.focus_height = this.y_size - this.margin.top - this.margin.bottom;\n\n      this.focus_offset = this.lc_width + this.margin.middle + this.margin.left;\n\n      this.initChart()\n      this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n      if(this.data.length > 1) {\n          this.updateChart();\n      }\n      else {\n          this.svg.selectAll(\".line\").remove()\n          this.focus.selectAll(\".bar\").remove()\n      }\n  }\n\n  redrawChanged() {\n      if(this.data.length > 1) {\n          this.updateHighlight();\n      }\n  }\n\n  unbind() {\n      this.subscription.dispose();\n  }\n\n  initChart() {\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.linechart = this.svg\n        .append(\"g\")\n        .attr(\"width\", this.lc_width)\n        .attr(\"height\", this.lc_height)\n        .attr(\"transform\",\n        \"translate(\" + this.margin.left + \", \"+ this.margin.top +\")\");\n\n    this.focus = this.svg\n        .append(\"g\")\n        .attr(\"transform\",\n        \"translate(\" + this.focus_offset + \", \"+ this.margin.top +\")\");\n\n    // set the ranges\n    this.x = d3.scaleLinear()\n      .range([0, this.lc_width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n\n    this.focus_x = d3.scaleLinear()\n        .range([0, this.focus_width]);\n\n    // add the x Axis\n    this.linechart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n      // x axis label\n      this.linechart.append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"y\", this.height+26)\n          .attr(\"x\", this.width/2)\n          .text(\"days\");\n\n      // add the x Axis\n      this.focus.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .attr(\"class\", \"xAxis\");\n\n        // x axis label\n        this.focus.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", this.height+26)\n            .attr(\"x\", this.width/2)\n            .text(\"day\");\n\n    // add the y Axis\n    this.linechart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n      // y axis label\n    this.linechart.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", -4)\n        .text((d) => { return this.y_attribute});\n\n    // add the y Axis\n    this.focus.append(\"g\")\n      .attr(\"transform\", \"translate(\"+ this.focus_width +\", 0)\")\n      .attr(\"class\", \"yAxis\")\n\n      // y axis label\n    this.focus.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", -4)\n        .attr(\"x\", this.focus_width)\n        .text((d) => { return this.y_attribute});\n\n    // define the line\n    this.valueline = d3.line()\n        .x((d) => this.x(d[this.x_attribute]))\n        .y((d) => this.y(d[this.y_attribute]));\n\n    let y_attribute = this.y_attribute\n\n    this.focus.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(\n          d3.brushY()\n          .extent([[0, 0], [this.focus_width, this.focus_height]])\n          .on(\"brush\", (e) => {\n              if (!d3.event.sourceEvent) return; // Only transition after input.\n              if (!d3.event.selection) {\n                  this.brushing = <any>[]\n                  return;\n              }; // Ignore empty selections.\n\n              let extent = d3.event.selection.map(this.y.invert);\n              let out = <any>[]\n\n              this.linechart.selectAll(\".line\")\n                .filter(function(d) {\n                    if(d[\"data\"][d[\"data\"].length-1][y_attribute] >= extent[1] && d[\"data\"][d[\"data\"].length-1][y_attribute] <= extent[0]) {\n                        out.push(d[\"id\"])\n                    }\n                })\n\n              this.brushing = out\n      })\n      .on(\"end\", (e) => {\n          if (!d3.event.sourceEvent) return; // Only transition after input.\n          if (!d3.event.selection) {\n              this.brushing = <any>[]\n              return;\n          }; // Ignore empty selections.\n\n          let extent = d3.event.selection.map(this.y.invert);\n          let out = <any>[]\n\n          this.linechart.selectAll(\".line\")\n            .filter(function(d) {\n                if(d[\"data\"][d[\"data\"].length-1][y_attribute] >= extent[1] && d[\"data\"][d[\"data\"].length-1][y_attribute] <= extent[0]) {\n                    out.push(d[\"id\"])\n                }\n            })\n\n          this.brushing = out\n      })\n    );\n  }\n\n  updateHighlight() {\n\n      this.linechart.selectAll(\"path.line\")\n          .classed(\"highlight\", function(this, d) {\n              if(d[\"highlight\"] == 1) { return true; }\n              else { return false; }\n          })\n          .classed(\"background\", function(this, d) {\n              if(d[\"highlight\"] == 2) { return true; }\n              else { return false; }\n          });\n\n        this.linechart.selectAll(\"path.line.highlight\").moveToFront();\n  }\n\n  updateChart() {\n    // Update domains\n    let x_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n    let x_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n\n    let focus_data = <any> [];\n\n     this.data.forEach((d: any[]) => {\n         focus_data.push(d[\"data\"][d[\"data\"].length-1])\n     })\n\n    this.x.domain([x_min, x_max]);\n    this.y.domain([y_min, y_max]);\n\n    // let bins = this.histogram(focus_data)\n    let bins = d3.histogram()\n        .value((d) => d[this.y_attribute])\n        .domain(this.y.domain())\n        .thresholds(d3.range(y_min, y_max, (y_max - y_min) / 20))\n        (focus_data);\n\n    this.focus_x.domain([0, d3.max(bins, (d: any[]) => d.length)]);\n\n    // Select chart\n    this.linechart.selectAll(\"path.line\").remove();\n    let chart = this.linechart.selectAll(\"path.line\")\n        .data(this.data)\n\n    this.focus.selectAll(\".bar\").remove();\n    let focus_chart = this.focus.selectAll(\"rect.bars\")\n        .data(bins)\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    this.focus.selectAll(\".yAxis\")\n        .call(d3.axisRight(this.y));\n    this.focus.selectAll(\".xAxis\")\n        .call(d3.axisBottom(this.focus_x).ticks(2));\n\n    // Linechart\n    // Remove bars\n    chart.exit().remove();\n\n    // Add and update bars\n    chart.enter()\n      .append(\"path\")\n      .attr(\"class\", \"line\")\n      .classed(\"highlight\", function(this, d) {\n          if(d[\"highlight\"] == 1) { return true; }\n          else { return false; }\n      })\n      .classed(\"background\", function(this, d) {\n          if(d[\"highlight\"] == 2) { return true; }\n          else { return false; }\n      })\n      .attr(\"d\", (d) => this.valueline(d[\"data\"]));\n\n    // Barchart\n    // Remove bars\n    focus_chart.exit().remove();\n\n    // Add bars\n    focus_chart.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n    //   .attr(\"x\", 1)\n      .attr(\"transform\", (d) => {\n\t\t  return \"translate(0,\" + this.y(d.x1) + \")\"; })\n      .attr(\"width\", (d) => { return  this.focus_x(d.length); })\n      .attr(\"height\", (d) => {\n          return this.y(d.x0) - this.y(d.x1) - 1;\n      })\n      .moveToBack();\n  }\n}\n","import * as d3 from \"d3\";\nimport * as _ from 'lodash';\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class parallelCoordinatesVertical {\n    // One-Way\n    @bindable margin = { top: 60, right: 20, bottom: 30, left: 40 };\n    @bindable redraw = 0;\n\n    // Two-Way\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n    // Observed Variables\n    @bindable data = [];\n\n    // Aurelia variables\n    private element;\n    private subscription;\n\n    // D3 variables\n    private svg;\n    private x = {};\n    private y;\n    private dimensions = <any>[];\n    private line;\n    private background;\n    private foreground;\n\n    // set the dimensions and margins of the graph\n    private x_size = 500;\n    private y_size = 500;\n    private width;\n    private height;\n\n    constructor(element, private bindingEngine) {\n        this.element = element;\n    }\n\n    // This is called after binding attributes\n    attached() {\n        if (this.data) {\n            // subscribe to the data array and watch for changes\n            this.subscription = this.bindingEngine\n                .collectionObserver(this.data)\n                .subscribe(splices => this.dataMutated(splices));\n        }\n\n        // set the dimensions and margins of the graph\n        this.x_size = this.element.parentElement.offsetWidth\n        this.y_size = this.element.parentElement.offsetHeight\n\n        this.width = this.x_size - this.margin.left - this.margin.right;\n        this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n        // Draw the graph\n        this.initChart()\n        this.updateChart();\n    }\n\n    // Update the chart if the data changes\n    dataMutated(splices) {\n        this.updateChart();\n    }\n\n    redrawChanged() {\n        if(this.data.length > 1) {\n            this.updateHighlight();\n        }\n    }\n\n    // Remove the watcher after disposing the class\n    unbind() {\n        this.subscription.dispose();\n    }\n\n    // D3 functions\n\n    // Draw the lines\n    private path(d) {\n        return this.line(this.dimensions.map((p) => {\n            return [this.x[p](d[p]), this.y(p)]; }));\n    }\n\n    // Update external variables with current brushes\n    private getBrushing = (g, x, dat) => {\n        let temp = <any>[];\n        let brushes = new Map();\n\n        g.selectAll(\".brush\")\n          .filter(function(this, d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(this, d) {\n              let brush_selection =  d3.brushSelection(this)\n              let extent = <any>[]\n              let selection = <any>[];\n\n              if(brush_selection != null) {\n                  extent = [x[d].invert(brush_selection[1]), x[d].invert(brush_selection[0])]\n                }\n\n              let brushed_elements = dat.filter(x => x[\"data\"][d] >= extent[0] && x[\"data\"][d] <= extent[1])\n\n              brushes.set(d, brushed_elements.map(x => x[\"id\"]))\n          });\n\n          let brushed = _.intersection(...Array.from(brushes.values()));\n\n          // If no element is brushed return a x to let the system know that\n          // there are brushes active\n          if(brushes.size > 0 && brushed.length == 0) {\n              brushed.push(\"x\")\n          }\n\n          this.brushing = brushed;\n    }\n\n    initChart() {\n        // append the svg object to the chart div of the page\n        // append a 'group' element to 'svg'\n        // moves the 'group' element to the top left margin\n        this.svg = d3.select(this.element)\n            .append(\"svg\")\n            .attr(\"width\", this.width + this.margin.left + this.margin.right)\n            .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n            \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n        // set the x range\n        this.y = d3.scalePoint()\n            .range([0, this.height]);\n\n        // Basic initialization\n        this.line = d3.line()\n        .curve(d3.curveMonotoneY);\n    }\n\n    updateHighlight() {\n        this.svg.selectAll(\".line\")\n            .classed(\"highlight\", function(this, d) {\n                if(d[\"highlight\"] == 1) { return true; }\n                else { return false; }\n            })\n            .classed(\"background\", function(this, d) {\n                if(d[\"highlight\"] == 2) { return true; }\n                else { return false; }\n            });\n\n        this.svg.selectAll(\".line.highlight\").moveToFront();\n    }\n\n    updateChart() {\n        // Get current dataset dimensions: Keys of the map\n        if(this.data.length > 0) {\n            this.dimensions = d3.keys(this.data[0][\"data\"]).filter((d) => {\n                return d != \"name\"\n            });\n        }\n\n        // Create corresponding y axis\n        // Currently only linear values\n        this.dimensions.map((dim) => {\n            let ext = <any> d3.extent(this.data, (data) => {\n                return data[\"data\"][dim];\n            })\n\n            if(ext[0] == ext[1]) {\n                ext[0] -= ext[0]*0.1;\n                ext[1] += ext[1]*0.1;\n            }\n\n            this.x[dim] = d3.scaleLinear()\n                    .range([this.width, 0])\n                    .domain(ext)\n        });\n\n        // Create the x axis\n        this.y.domain(this.dimensions);\n\n        // Add grey background lines for context.\n        this.background = this.svg.append(\"g\")\n\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"class\", \"line\")\n            .classed(\"highlight\", function(this, d) {\n                if(d[\"highlight\"] == 1) { return true; }\n                else { return false; }\n            })\n            .classed(\"background\", function(this, d) {\n                if(d[\"highlight\"] == 2) { return true; }\n                else { return false; }\n            })\n            .attr(\"d\", (d) => { return this.path(d[\"data\"])});\n\n        // Create local versions of class variables\n        // This is necessary due to the nature of TS and D3\n\n        let width = this.width\n        let x = this.x;\n        let dat = this.data\n        let getBrushing = this.getBrushing;\n\n        // Create drawing area\n        let g = this.svg.selectAll(\".dimension\")\n            .data(this.dimensions)\n          .enter().append(\"g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", (d) => {\n                return \"translate(0,\" + this.y(d) + \")\"; });\n\n        // Add axis\n        g.append(\"g\")\n            .each(function(this, d) {\n                 d3.select(this).call(d3.axisTop(x[d]));\n             });\n\n        // Add tiltes for the axis\n        g.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", -9)\n            .attr(\"transform\", \"rotate(-90)\")\n            .text((d) => { return d; });\n\n        // Add and store a brush for each axis.\n        g.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .each(function(this, d) {\n                 d3.select(this).call(d3.brushX()\n                .extent([[0, -9], [width, 9]])\n                .on(\"brush\", () => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n\n                     getBrushing(g, x, dat)\n                })\n                .on(\"end\", () => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n\n                     getBrushing(g, x, dat)\n                })\n            );\n        })\n    }\n}\n","import {autoinject, observable} from 'aurelia-framework';\nimport \"ion-rangeslider\"\nimport * as d3 from \"d3\"\n\n// This magic line removed the error messages for numeric\ndeclare var numeric: any;\ndeclare var lobos: any;\n\n@autoinject\nexport class Vspa {\n    // VPSA\n    param1 = 1;\n    param2 = 1;\n    @observable brushing_pop;\n    @observable brushing_sus;\n    @observable brushing_inf;\n    @observable brushing_rec;\n    redraw_pop;\n    redraw_sus;\n    redraw_inf;\n    redraw_rec;\n\n    @observable brushing_parallel;\n    redraw_parallel;\n\n    test = 100\n\n    // SIR Model\n    TS = 1.0\n    NY = 1\n    ND = this.NY*365\n\n    S0 = 0.1\n    I0 = 1e-4\n    R0 = 1 - this.S0 - this.I0\n\n    // Mortality probabilty, I dies before natural death or recovery\n    rho = 0.5\n    rho_n = 5;\n    rho_from = 40;\n    rho_to = 60;\n    // Per captia death rate  from natural causes\n    v = 1/(70*365.0)\n    v_n = 5;\n    v_from = 70\n    v_to = 80\n    // Population birth rate\n    mu = 1/(70*365.0);\n    mu_n = 5;\n    mu_from = 70;\n    mu_to = 180;\n    // Transmission rate: I -> S. Includes encounter and transmission rate\n    beta = 520/365.0\n    beta_n = 5;\n    beta_from = 0.9\n    beta_to = 1.1\n    // Recovery rate\n    gamma=1/7.0\n    gamma_n = 5;\n    gamma_from = 4;\n    gamma_to = 6;\n\n    // Sobol sampling\n    sobol_n = 100\n\n    INPUT = [this.S0, this.I0, this.R0]\n\n    data_parallel = <any[]> []\n    data_lines = <any[]> []\n    data_lines_original = <any[]> []\n    data_length = 0;\n\n    lines = <any[]> []\n    parallel = <any[]> []\n\n    all_ids = new Set();\n    current_filter = new Set();\n\n    attached() {\n        // Attaching range sliders\n        $(\"#rho\").ionRangeSlider({\n            min: 0,\n            max: 100,\n            from: 40,\n            to: 60,\n            step: 1,\n            type: \"double\",\n            postfix: \"%\",\n            grid: true,\n            grid_num: 10,\n            onFinish: (data) => {\n            this.rho_from = data[\"from_pretty\"]\n            this.rho_to = data[\"to_pretty\"]\n        }});\n        $(\"#v\").ionRangeSlider({\n            min: 10,\n            max: 150,\n            from: 70,\n            to: 80,\n            step: 1,\n            type: \"double\",\n            prefix: \"1/\",\n            postfix: \" per year\",\n            grid: true,\n            grid_num: 10,\n            onFinish: (data) => {\n            this.v_from = data[\"from_pretty\"]\n            this.v_to = data[\"to_pretty\"]\n        }});\n        $(\"#mu\").ionRangeSlider({\n            min: 10,\n            max: 150,\n            from: 70,\n            to: 80,\n            step: 1,\n            type: \"double\",\n            prefix: \"1/\",\n            postfix: \" per year\",\n            grid: true,\n            grid_num: 10,\n            onFinish: (data) => {\n            this.mu_from = data[\"from_pretty\"]\n            this.mu_to = data[\"to_pretty\"]\n        }});\n        $(\"#beta\").ionRangeSlider({\n            min: 0,\n            max: 2,\n            from: 0.9,\n            to: 1.1,\n            step: 0.1,\n            type: \"double\",\n            postfix: \" per day\",\n            grid: true,\n            grid_num: 10,\n            onFinish: (data) => {\n            this.gamma_from = data[\"from_pretty\"]\n            this.gamma_to = data[\"to_pretty\"]\n        }});\n        $(\"#gamma\").ionRangeSlider({\n            min: 1,\n            max: 20,\n            from: 4,\n            to: 6,\n            step: 1,\n            type: \"double\",\n            prefix: \"1/\",\n            grid: true,\n            grid_num: 10,\n            onFinish: (data) => {\n            this.gamma_from = data[\"from_pretty\"]\n            this.gamma_to = data[\"to_pretty\"]\n        }});\n    }\n\n    brushing_popChanged() {\n        this.updateOutData(this.brushing_pop);\n        this.updateInData(this.brushing_pop);\n    }\n\n    brushing_susChanged() {\n        this.updateOutData(this.brushing_sus);\n        this.updateInData(this.brushing_sus);\n    }\n\n    brushing_recChanged() {\n        this.updateOutData(this.brushing_rec);\n        this.updateInData(this.brushing_rec);\n    }\n\n    brushing_infChanged() {\n        this.updateOutData(this.brushing_inf);\n        this.updateInData(this.brushing_inf);\n    }\n\n    brushing_parallelChanged() {\n        this.updateInData(this.brushing_parallel);\n        this.filterOutData(this.brushing_parallel);\n    }\n\n    redrawLinecharts() {\n        this.redraw_pop = this.redraw_pop == 0 ? 1 : 0;\n        this.redraw_inf = this.redraw_inf == 0 ? 1 : 0;\n        this.redraw_rec = this.redraw_rec == 0 ? 1 : 0;\n        this.redraw_sus = this.redraw_sus == 0 ? 1 : 0;\n    }\n\n    private updateOutData(ids) {\n        for(let i = 0; i < this.data_lines.length; i++) {\n            if(ids.length > 0) {\n                if(ids.includes(this.data_lines[i][\"id\"])) {\n                    this.data_lines[i][\"highlight\"] = 1\n                }\n                else {\n                    this.data_lines[i][\"highlight\"] = 2\n                }\n            }\n            else {\n                this.data_lines[i][\"highlight\"] = 1\n            }\n        }\n\n        this.redrawLinecharts();\n    }\n\n    private updateInData(ids) {\n        for(let i = 0; i < this.data_length; i++) {\n            if(ids.length > 0) {\n                if(ids.includes(this.data_parallel[i][\"id\"])) {\n                    this.data_parallel[i][\"highlight\"] = 1\n                }\n                else {\n                    this.data_parallel[i][\"highlight\"] = 2\n                }\n            }\n            else {\n                this.data_parallel[i][\"highlight\"] = 1\n            }\n        }\n\n        this.redraw_parallel = this.redraw_parallel == 0 ? 1 : 0;\n    }\n\n    private filterOutData(ids) {\n        if(ids.length > 1) {\n            let highlight_list = new Set(ids);\n\n            this.data_lines.length = 0\n\n            this.data_lines.push(...this.data_lines_original.filter(x => highlight_list.has(x[\"id\"])))\n\n            // Save current filter\n            this.current_filter = highlight_list;\n        }\n        else {\n            this.data_lines.length = 0\n            this.data_lines.push(...this.data_lines_original)\n        }\n    }\n\n    vspa() {\n        // Update variables\n        this.ND = this.NY*365\n        this.R0 = 1 - this.S0 - this.I0\n        this.INPUT = [+this.S0, +this.I0, +this.R0]\n\n        let params = this.get_params(\"sobol\")\n        let time_range = <any[]> []\n\n        for (let i = 0; i < this.ND; i++) {\n            time_range.push(i)\n        }\n\n        params.forEach( (d, run) => {\n            this.rho = d[0];\n            this.v = d[1];\n            this.mu = d[2];\n            this.beta = d[3];\n            this.gamma = d[4];\n\n            let sol = numeric.dopri(0, this.ND, this.INPUT, this.SIR, 1e-6, 5000);\n\n            let out = sol.at(time_range)\n\n            let temp = <any[]> []\n            for (let i = 0; i < out.length; i++) {\n                temp.push({\n                    \"x\": time_range[i],\n                    \"sus\": out[i][0],\n                    \"inf\": out[i][1],\n                    \"rec\": out[i][2],\n                    \"pop\": out[i][0] + out[i][1] + out[i][2]\n                })\n            }\n\n            this.all_ids.add(run)\n\n            this.data_parallel.push({\n                    \"id\": run,\n                    \"highlight\": 0,\n                    \"data\": {\n                        \"rho\": this.rho,\n                        \"v\": this.v,\n                        \"mu\": this.mu,\n                        \"beta\": this.beta,\n                        \"gamma\": this.gamma\n                    }\n            })\n\n            this.data_lines_original.push({\n                    \"id\": run,\n                    \"highlight\": 0,\n                    \"data\": temp\n            })\n        })\n\n        this.data_length = this.data_lines_original.length;\n        this.filterOutData([])\n    }\n\n\n    private SIR = (t, INP) => {\n    \tlet Y = [0, 0 ,0]\n    \tlet V = INP\n\n        Y[0] = this.v - this.beta * V[0] * V[1] / V.reduce((a,b) => a + b, 0) - this.mu * V[0]\n    \tY[1] = this.beta * V[0] * V[1] / V.reduce((a,b) => a + b, 0) - (this.gamma + this.mu) * V[1]/(1-this.rho)\n    \tY[2] = this.gamma * V[1] - this.mu * V[2]\n\n    \treturn Y\n    }\n\n    cartesian(arg) {\n        let r = <any[]> [];\n        // let arg = arguments;\n        let max = arg.length-1;\n\n        function helper(arr, i) {\n            for (var j=0, l=arg[i].length; j<l; j++) {\n                var a = arr.slice(0); // clone arr\n                a.push(arg[i][j]);\n                if (i==max)\n                    r.push(a);\n                else\n                    helper(a, i+1);\n            }\n        }\n        helper([], 0);\n        return r;\n    }\n\n    getRandom(n, min, max) {\n        return Array.from({length: n}, () => Math.random() * (max - min) + min);\n    }\n\n    getRandomInt(n, min, max) {\n        return Array.from({length: n}, () => Math.floor(Math.random() * (max - min + 1)) + min);\n    }\n\n    getParamsFromSobol(points) {\n        let params = <any>[];\n\n        let rho_scale = d3.scaleLinear()\n          .domain([0, 1])\n          .range([this.rho_from, this.rho_to]);\n        let v_scale = d3.scaleLinear()\n          .domain([0, 1])\n          .range([this.v_from, this.v_to]);\n        let mu_scale = d3.scaleLinear()\n          .domain([0, 1])\n          .range([this.mu_from, this.mu_to]);\n        let beta_scale = d3.scaleLinear()\n          .domain([0, 1])\n          .range([this.beta_from, this.beta_to]);\n        let gamma_scale = d3.scaleLinear()\n          .domain([0, 1])\n          .range([this.gamma_from, this.gamma_to]);\n\n        points.forEach( d => {\n            params.push([\n                Math.round(rho_scale(d[0]))/100,\n                1/(Math.round(v_scale(d[1]))*365),\n                1/(Math.round(mu_scale(d[2]))*365),\n                beta_scale(d[3]),\n                1/Math.round(gamma_scale(d[4]))\n            ])\n        })\n\n        return params\n    }\n\n    get_params(sampling) {\n        if(sampling == \"rnd\") {\n            let rho = this.getRandom(this.rho_n, this.rho_from/100, this.rho_to/100)\n            let v = this.getRandom(this.v_n, 1/(this.v_from*365), 1/(this.v_to*365))\n            let mu = this.getRandom(this.mu_n, 1/(this.mu_from*365), 1/(this.mu_to*365))\n            let beta = this.getRandom(this.beta_n, this.beta_from, this.beta_to)\n            let gamma = this.getRandom(this.gamma_n, 1/this.gamma_from, 1/this.gamma_to)\n\n            return this.cartesian([rho, v, mu, beta, gamma]);\n        }\n\n        if(sampling == \"sobol\") {\n            let seq = lobos.Sobol(5)\n\n            return this.getParamsFromSobol(seq.take(this.sobol_n))\n        }\n    }\n}\n","import {autoinject} from 'aurelia-framework';\r\n\r\n\r\n@autoinject\r\nexport class NoSelection {\r\n  message = \"No Selection\"\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}